{"version":3,"file":"pixi-heaven.js","sourceRoot":"","sources":["../src/loader.ts","../src/settings.ts","../src/utils.ts","../src/xporter.ts","../src/a_spine/Spine.ts","../src/animation/AnimationState.ts","../src/base/atlas/AtlasNode.ts","../src/base/atlas/BaseTexture.ts","../src/base/atlas/IAtlas.ts","../src/base/atlas/TextureRegion.ts","../src/base/atlas/TextureResource.ts","../src/base/webgl/BatchBuffer.ts","../src/base/webgl/generateMultiTextureShader.ts","../src/base/webgl/SpriteRenderer.ts","../src/hacks/AtlasManager.ts","../src/hacks/BaseTexture.ts","../src/hacks/GroupD8.ts","../src/hacks/WebGLRenderer.ts","../src/mesh/00_Mesh.ts","../src/mesh/10_Plane.ts","../src/mesh/NineSlicePlane.ts","../src/mesh/Rope.ts","../src/mesh/RopePoint.ts","../src/mesh/webgl/MeshColoredRenderer.ts","../src/mesh/webgl/MeshHeavenRenderer.ts","../src/polygonPacking/Spritesheet.ts","../src/superAtlas/AtlasOptions.ts","../src/superAtlas/SuperAtlas.ts","../src/twotint/BitmapText.ts","../src/twotint/ColorTransform.ts","../src/twotint/sprites/convert.ts","../src/twotint/sprites/Sprite.ts","../src/twotint/sprites/SpriteHeavenRenderer.ts","../src/twotint/sprites/SpriteMaskedRenderer.ts","../src/twotint/sprites/SpriteModel.ts","../src/twotint/sprites/Text2d.ts","../src/z_spine/Spine.ts"],"names":[],"mappings":"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","sourcesContent":["declare module PIXI.loaders {\r\n\tinterface Resource {\r\n\t\tspritesheet?: PIXI.Spritesheet;\r\n\t}\r\n}\r\n\r\nnamespace pixi_heaven {\r\n\timport Resource = PIXI.loaders.Resource;\r\n\r\n\texport function atlasChecker() {\r\n\t\treturn function (resource: PIXI.loaders.Resource, next: () => any) {\r\n\t\t\tlet atlas = resource.metadata.runtimeAtlas as IAtlas;\r\n\t\t\tif (!atlas) {\r\n\t\t\t\treturn next();\r\n\t\t\t}\r\n\r\n\t\t\tif (resource.type === Resource.TYPE.IMAGE) {\r\n\t\t\t\tif (resource.texture) {\r\n\t\t\t\t\tresource.texture = atlas.add(resource.texture, true);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn next();\r\n\t\t\t}\r\n\r\n\t\t\tif (resource.type === Resource.TYPE.JSON &&\r\n\t\t\t\tresource.spritesheet) {\r\n\t\t\t\tresource.spritesheet.textures = atlas.addHash(resource.spritesheet.textures, true);\r\n\t\t\t\tresource.textures = resource.spritesheet.textures;\r\n\t\t\t\treturn next();\r\n\t\t\t}\r\n\r\n\t\t\t//TODO: something about spine\r\n\r\n\t\t\tnext();\r\n\t\t};\r\n\t}\r\n\r\n\tPIXI.loaders.Loader.addPixiMiddleware(atlasChecker);\r\n\tPIXI.loader.use(atlasChecker());\r\n}","namespace pixi_heaven {\r\n\texport let settings = {\r\n\t\tMESH_PLUGIN: 'meshHeaven',\r\n\t\tSPINE_MESH_PLUGIN: 'spriteHeaven',\r\n\t\tTEXTURE_MANAGER: true\r\n\t}\r\n}\r\n","namespace pixi_heaven.utils {\r\n\texport function createIndicesForQuads(size: number) {\r\n\t\t// the total number of indices in our array, there are 6 points per quad.\r\n\r\n\t\tconst totalIndices = size * 6;\r\n\r\n\t\tconst indices = new Uint16Array(totalIndices);\r\n\r\n\t\t// fill the indices with the quads to draw\r\n\t\tfor (let i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\r\n\t\t\tindices[i + 0] = j + 0;\r\n\t\t\tindices[i + 1] = j + 1;\r\n\t\t\tindices[i + 2] = j + 2;\r\n\t\t\tindices[i + 3] = j + 0;\r\n\t\t\tindices[i + 4] = j + 2;\r\n\t\t\tindices[i + 5] = j + 3;\r\n\t\t}\r\n\r\n\t\treturn indices;\r\n\t}\r\n\r\n\t//bit twiddle is here\r\n\r\n\texport function isPow2(v: number): boolean {\r\n\t\treturn !(v & (v - 1)) && (!!v);\r\n\t}\r\n\r\n\texport function nextPow2(v: number): number {\r\n\t\tv += +(v === 0);\r\n\t\t--v;\r\n\t\tv |= v >>> 1;\r\n\t\tv |= v >>> 2;\r\n\t\tv |= v >>> 4;\r\n\t\tv |= v >>> 8;\r\n\t\tv |= v >>> 16;\r\n\t\treturn v + 1;\r\n\t}\r\n\r\n\texport function log2(v: number) {\r\n\t\tlet r: number, shift: number;\r\n\t\tr = +(v > 0xFFFF) << 4;\r\n\t\tv >>>= r;\r\n\t\tshift = +(v > 0xFF  ) << 3;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0xF   ) << 2;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\tshift = +(v > 0x3   ) << 1;\r\n\t\tv >>>= shift;\r\n\t\tr |= shift;\r\n\t\treturn r | (v >> 1);\r\n\t}\r\n}\r\n","///<reference types=\"pixi.js\"/>\r\nnamespace pixi_heaven {\r\n    (PIXI as any).heaven = pixi_heaven;\r\n}\r\n","namespace pixi_heaven {\r\n    if (!(PIXI as any).spine) {\r\n        (PIXI as any).spine = {\r\n            Spine: function () {}\r\n        }\r\n    }\r\n}\r\n","namespace pixi_heaven {\r\n\texport interface IFrameObject {\r\n\t\ttexture: PIXI.Texture;\r\n\t\ttime: number;\r\n\t}\r\n\r\n\texport interface ITextureAnimationTarget {\r\n\t\ttexture: PIXI.Texture;\r\n\t\tanimState: AnimationState;\r\n\t}\r\n\r\n\texport class AnimationState {\r\n\t\ttexture: PIXI.Texture;\r\n\r\n\t\t_textures: Array<PIXI.Texture> = null;\r\n\t\t_durations: Array<number> = null;\r\n\t\t_autoUpdate: boolean;\r\n\t\tanimationSpeed: number = 1;\r\n\t\t_target: ITextureAnimationTarget;\r\n\t\tloop = true;\r\n\t\tonComplete: Function = null;\r\n\t\tonFrameChange: Function = null;\r\n\t\tonLoop: Function = null;\r\n\t\t_currentTime: number = 0;\r\n\t\tplaying: boolean = false;\r\n\r\n\t\tconstructor(textures: Array<PIXI.Texture> | Array<IFrameObject>, autoUpdate?: boolean) {\r\n\t\t\tthis.texture = textures[0] instanceof PIXI.Texture ? textures[0] as PIXI.Texture : (textures[0] as IFrameObject).texture;\r\n\r\n\t\t\tthis.textures = textures as Array<PIXI.Texture>;\r\n\r\n\t\t\tthis._autoUpdate = autoUpdate !== false;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the AnimatedSprite\r\n\t\t *\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tif (!this.playing) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playing = false;\r\n\t\t\tif (this._autoUpdate) {\r\n\t\t\t\tPIXI.ticker.shared.remove(this.update, this);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Plays the AnimatedSprite\r\n\t\t *\r\n\t\t */\r\n\t\tplay() {\r\n\t\t\tif (this.playing) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.playing = true;\r\n\t\t\tif (this._autoUpdate) {\r\n\t\t\t\tPIXI.ticker.shared.add(this.update, this, PIXI.UPDATE_PRIORITY.HIGH);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops the AnimatedSprite and goes to a specific frame\r\n\t\t *\r\n\t\t * @param {number} frameNumber - frame index to stop at\r\n\t\t */\r\n\t\tgotoAndStop(frameNumber: number) {\r\n\t\t\tthis.stop();\r\n\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tthis._currentTime = frameNumber;\r\n\r\n\t\t\tif (previousFrame !== this.currentFrame) {\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Goes to a specific frame and begins playing the AnimatedSprite\r\n\t\t *\r\n\t\t * @param {number} frameNumber - frame index to start at\r\n\t\t */\r\n\t\tgotoAndPlay(frameNumber: number) {\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tthis._currentTime = frameNumber;\r\n\r\n\t\t\tif (previousFrame !== this.currentFrame) {\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\r\n\t\t\tthis.play();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the object transform for rendering.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {number} deltaTime - Time since last tick.\r\n\t\t */\r\n\t\tupdate(deltaTime: number) {\r\n\t\t\tconst elapsed = this.animationSpeed * deltaTime;\r\n\t\t\tconst previousFrame = this.currentFrame;\r\n\r\n\t\t\tif (this._durations !== null) {\r\n\t\t\t\tlet lag = this._currentTime % 1 * this._durations[this.currentFrame];\r\n\r\n\t\t\t\tlag += elapsed / 60 * 1000;\r\n\r\n\t\t\t\twhile (lag < 0) {\r\n\t\t\t\t\tthis._currentTime--;\r\n\t\t\t\t\tlag += this._durations[this.currentFrame];\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet sign = this.animationSpeed * deltaTime;\r\n\r\n\t\t\t\tif (sign < 0) sign = -1;\r\n\t\t\t\telse if (sign > 0) sign = 1;\r\n\r\n\t\t\t\tthis._currentTime = Math.floor(this._currentTime);\r\n\r\n\t\t\t\twhile (lag >= this._durations[this.currentFrame]) {\r\n\t\t\t\t\tlag -= this._durations[this.currentFrame] * sign;\r\n\t\t\t\t\tthis._currentTime += sign;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis._currentTime += lag / this._durations[this.currentFrame];\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._currentTime += elapsed;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._currentTime < 0 && !this.loop) {\r\n\t\t\t\tthis.gotoAndStop(0);\r\n\r\n\t\t\t\tif (this.onComplete) {\r\n\t\t\t\t\tthis.onComplete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (this._currentTime >= this._textures.length && !this.loop) {\r\n\t\t\t\tthis.gotoAndStop(this._textures.length - 1);\r\n\r\n\t\t\t\tif (this.onComplete) {\r\n\t\t\t\t\tthis.onComplete();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (previousFrame !== this.currentFrame) {\r\n\t\t\t\tif (this.loop && this.onLoop) {\r\n\t\t\t\t\tif (this.animationSpeed > 0 && this.currentFrame < previousFrame) {\r\n\t\t\t\t\t\tthis.onLoop();\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if (this.animationSpeed < 0 && this.currentFrame > previousFrame) {\r\n\t\t\t\t\t\tthis.onLoop();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.updateTexture();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the displayed texture to match the current frame index\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateTexture() {\r\n\t\t\tthis.texture = this._textures[this.currentFrame];\r\n\t\t\tif (this._target) {\r\n\t\t\t\tthis._target.texture = this.texture;\r\n\t\t\t}\r\n\t\t\tif (this.onFrameChange) {\r\n\t\t\t\tthis.onFrameChange(this.currentFrame);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tbind(target: ITextureAnimationTarget) {\r\n\t\t\tthis._target = target;\r\n\t\t\ttarget.animState = this;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * A short hand way of creating a movieclip from an array of frame ids\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @param {string[]} frames - The array of frames ids the movieclip will use as its texture frames\r\n\t\t * @return {AnimatedSprite} The new animated sprite with the specified frames.\r\n\t\t */\r\n\t\tstatic fromFrames(frames: Array<string>) {\r\n\t\t\tconst textures = [];\r\n\r\n\t\t\tfor (let i = 0; i < frames.length; ++i) {\r\n\t\t\t\ttextures.push(PIXI.Texture.fromFrame(frames[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationState(textures);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * A short hand way of creating a movieclip from an array of image ids\r\n\t\t *\r\n\t\t * @static\r\n\t\t * @param {string[]} images - the array of image urls the movieclip will use as its texture frames\r\n\t\t * @return {AnimatedSprite} The new animate sprite with the specified images as frames.\r\n\t\t */\r\n\t\tstatic fromImages(images: Array<string>) {\r\n\t\t\tconst textures = [];\r\n\r\n\t\t\tfor (let i = 0; i < images.length; ++i) {\r\n\t\t\t\ttextures.push(PIXI.Texture.fromImage(images[i]));\r\n\t\t\t}\r\n\r\n\t\t\treturn new AnimationState(textures);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * totalFrames is the total number of frames in the AnimatedSprite. This is the same as number of textures\r\n\t\t * assigned to the AnimatedSprite.\r\n\t\t *\r\n\t\t * @readonly\r\n\t\t * @member {number}\r\n\t\t * @default 0\r\n\t\t */\r\n\t\tget totalFrames() {\r\n\t\t\treturn this._textures.length;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The array of textures used for this AnimatedSprite\r\n\t\t *\r\n\t\t * @member {PIXI.Texture[]}\r\n\t\t */\r\n\t\tget textures() {\r\n\t\t\treturn this._textures;\r\n\t\t}\r\n\r\n\t\tset textures(value) {\r\n\t\t\tif (value[0] instanceof PIXI.Texture) {\r\n\t\t\t\tthis._textures = value;\r\n\t\t\t\tthis._durations = null;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tthis._textures = [];\r\n\t\t\t\tthis._durations = [];\r\n\r\n\t\t\t\tfor (let i = 0; i < value.length; i++) {\r\n\t\t\t\t\tconst val = (value as any)[i];\r\n\t\t\t\t\tthis._textures.push(val.texture);\r\n\t\t\t\t\tthis._durations.push(val.time);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.gotoAndStop(0);\r\n\t\t\tthis.updateTexture();\r\n\t\t}\r\n\r\n\t\tget currentFrame()\r\n\t\t{\r\n\t\t\tlet currentFrame = Math.floor(this._currentTime) % this._textures.length;\r\n\r\n\t\t\tif (currentFrame < 0)\r\n\t\t\t{\r\n\t\t\t\tcurrentFrame += this._textures.length;\r\n\t\t\t}\r\n\r\n\t\t\treturn currentFrame;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\timport Rectangle = PIXI.Rectangle;\r\n\r\n\tconst INF = 1 << 20;\r\n\t\r\n\t//TODO: add some padding\r\n\r\n\texport class AtlasNode<T> {\r\n\t\tpublic childs: Array<AtlasNode<T>> = [];\r\n\t\tpublic rect = new Rectangle(0, 0, INF, INF);\r\n\t\tpublic data: T = null;\r\n\r\n\t\tpublic insert(atlasWidth: number, atlasHeight: number,\r\n\t\t              width: number, height: number, data: T): AtlasNode<T> {\r\n\t\t\tif (this.childs.length > 0) {\r\n\t\t\t\tconst newNode: AtlasNode<T> = this.childs[0].insert(\r\n\t\t\t\t\tatlasWidth, atlasHeight,\r\n\t\t\t\t\twidth, height, data);\r\n\t\t\t\tif (newNode != null) {\r\n\t\t\t\t\treturn newNode;\r\n\t\t\t\t}\r\n\t\t\t\treturn this.childs[1].insert(atlasWidth, atlasHeight, width, height, data);\r\n\t\t\t} else {\r\n\t\t\t\tlet rect: Rectangle = this.rect;\r\n\t\t\t\tif (this.data != null) return null;\r\n\r\n\t\t\t\tconst w = Math.min(rect.width, atlasWidth - rect.x);\r\n\r\n\t\t\t\tif (width > rect.width ||\r\n\t\t\t\t\twidth > atlasWidth - rect.x ||\r\n\t\t\t\t\theight > rect.height ||\r\n\t\t\t\t\theight > atlasHeight - rect.y) return null;\r\n\r\n\t\t\t\tif (width == rect.width && height == rect.height) {\r\n\t\t\t\t\tthis.data = data;\r\n\t\t\t\t\treturn this;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.childs.push(new AtlasNode<T>());\r\n\t\t\t\tthis.childs.push(new AtlasNode<T>());\r\n\r\n\t\t\t\tconst dw: Number = rect.width - width;\r\n\t\t\t\tconst dh: Number = rect.height - height;\r\n\r\n\t\t\t\tif (dw > dh) {\r\n\t\t\t\t\tthis.childs[0].rect = new Rectangle(rect.x, rect.y, width, rect.height);\r\n\t\t\t\t\tthis.childs[1].rect = new Rectangle(rect.x + width, rect.y, rect.width - width, rect.height);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.childs[0].rect = new Rectangle(rect.x, rect.y, rect.width, height);\r\n\t\t\t\t\tthis.childs[1].rect = new Rectangle(rect.x, rect.y + height, rect.width, rect.height - height);\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.childs[0].insert(atlasWidth, atlasHeight, width, height, data);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\t// export class BaseTexture {\r\n\t// }\r\n}","namespace pixi_heaven {\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport Texture = PIXI.Texture;\r\n\timport WebGLRenderer = PIXI.WebGLRenderer;\r\n\r\n\texport class AtlasEntry {\r\n\t\tbaseTexture: BaseTexture;\r\n\t\tatlas: IAtlas;\r\n\t\tcurrentNode: AtlasNode<AtlasEntry>;\r\n\t\tcurrentAtlas: SuperAtlas;\r\n\t\twidth: number;\r\n\t\theight: number;\r\n\r\n\t\tnodeUpdateID: number = 0;\r\n\r\n\t\tregions: Array<TextureRegion> = [];\r\n\r\n\t\tconstructor(atlas: IAtlas, baseTexture: BaseTexture) {\r\n\t\t\tthis.baseTexture = baseTexture;\r\n\t\t\tthis.width = baseTexture.width;\r\n\t\t\tthis.height = baseTexture.height;\r\n\t\t\tthis.atlas = atlas;\r\n\t\t}\r\n\t}\r\n\r\n\texport interface IRepackResult {\r\n\t\t// goodMap: { [key: string]: AtlasNode<AtlasEntry> };\r\n\t\tfailed: Array<AtlasEntry>;\r\n\r\n\t\tapply(): void;\r\n\t}\r\n\r\n\texport interface IAtlas {\r\n\t\tadd(texture: BaseTexture | Texture, swapCache ?: boolean): TextureRegion;\r\n\r\n\t\taddHash(textures: { [key: string]: Texture }, swapCache ?: boolean): { [key: string]: TextureRegion };\r\n\r\n\t\trepack(): IRepackResult;\r\n\r\n\t\tprepare(renderer: WebGLRenderer): Promise<void>;\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\timport Texture = PIXI.Texture;\r\n\timport Rectangle = PIXI.Rectangle;\r\n\r\n\t//TODO: support resolution\r\n\t//TODO: support no-frame\r\n\t//TODO: support updates\r\n\r\n\texport class TextureRegion extends PIXI.Texture {\r\n\t\tuid = PIXI.utils.uid();\r\n\r\n\t\tproxied: Texture;\r\n\t\tentry: AtlasEntry;\r\n\r\n\t\tconstructor(entry: AtlasEntry, texture: PIXI.Texture = new Texture(entry.baseTexture)) {\r\n\t\t\tsuper(entry.currentAtlas ? entry.currentAtlas.baseTexture : texture.baseTexture,\r\n\t\t\t\tentry.currentNode ? new Rectangle(texture.frame.x + entry.currentNode.rect.x,\r\n\t\t\t\t\ttexture.frame.y + entry.currentNode.rect.y,\r\n\t\t\t\t\ttexture.frame.width,\r\n\t\t\t\t\ttexture.frame.height) : texture.frame.clone(),\r\n\t\t\t\ttexture.orig,\r\n\t\t\t\ttexture.trim,\r\n\t\t\t\ttexture.rotate\r\n\t\t\t);\r\n\t\t\tthis.proxied = texture;\r\n\t\t\tthis.entry = entry;\r\n\t\t}\r\n\r\n\t\tupdateFrame() {\r\n\t\t\tconst texture = this.proxied;\r\n\t\t\tconst entry = this.entry;\r\n\t\t\tconst frame = this._frame;\r\n\t\t\tif (entry.currentNode) {\r\n\t\t\t\tthis.baseTexture = entry.currentAtlas.baseTexture;\r\n\t\t\t\tframe.x = texture.frame.x + entry.currentNode.rect.x;\r\n\t\t\t\tframe.y = texture.frame.y + entry.currentNode.rect.y;\r\n\t\t\t} else {\r\n\t\t\t\tthis.baseTexture = texture.baseTexture;\r\n\t\t\t\tframe.x = texture.frame.x;\r\n\t\t\t\tframe.y = texture.frame.y;\r\n\t\t\t}\r\n\r\n\t\t\tframe.width = texture.frame.width;\r\n\t\t\tframe.height = texture.frame.height;\r\n\t\t\tthis._updateUvs();\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\texport interface ITextureResource {\r\n\t\tonTextureUpload(renderer: PIXI.WebGLRenderer, baseTexture: PIXI.BaseTexture, glTexture: PIXI.glCore.GLTexture): boolean;\r\n\r\n\t\tonTextureTag?(baseTexture: PIXI.BaseTexture): void;\r\n\r\n\t\tonTextureNew?(baseTexture: PIXI.BaseTexture): void;\r\n\r\n\t\tonTextureDestroy?(baseTexture: PIXI.BaseTexture): boolean;\r\n\t}\r\n}\r\n","namespace pixi_heaven.webgl {\r\n\texport class BatchBuffer {\r\n\t\tvertices: ArrayBuffer;\r\n\t\tfloat32View: Float32Array;\r\n\t\tuint32View: Uint32Array;\r\n\r\n\r\n\t\tconstructor(size: number) {\r\n\t\t\tthis.vertices = new ArrayBuffer(size);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Float32Array for positions\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.float32View = new Float32Array(this.vertices);\r\n\r\n\t\t\t/**\r\n\t\t\t * View on the vertices as a Uint32Array for uvs\r\n\t\t\t *\r\n\t\t\t * @member {Float32Array}\r\n\t\t\t */\r\n\t\t\tthis.uint32View = new Uint32Array(this.vertices);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Destroys the buffer.\r\n\t\t *\r\n\t\t */\r\n\t\tdestroy() {\r\n\t\t\tthis.vertices = null;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.webgl {\r\n\texport function generateMultiTextureShader(vertexSrc: string, fragmentSrc: string, gl: WebGLRenderingContext, maxTextures: number) {\r\n\t\tfragmentSrc = fragmentSrc.replace(/%count%/gi, maxTextures + '');\r\n\t\tfragmentSrc = fragmentSrc.replace(/%forloop%/gi, generateSampleSrc(maxTextures));\r\n\r\n\t\tconst shader = new PIXI.Shader(gl, vertexSrc, fragmentSrc);\r\n\r\n\t\tconst sampleValues = new Int32Array(maxTextures);\r\n\r\n\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\tsampleValues[i] = i;\r\n\t\t}\r\n\r\n\t\tshader.bind();\r\n\t\tshader.uniforms.uSamplers = sampleValues;\r\n\r\n\t\treturn shader;\r\n\t}\r\n\r\n\tfunction generateSampleSrc(maxTextures: number) {\r\n\t\tlet src = '';\r\n\r\n\t\tsrc += '\\n';\r\n\t\tsrc += '\\n';\r\n\r\n\t\tfor (let i = 0; i < maxTextures; i++) {\r\n\t\t\tif (i > 0) {\r\n\t\t\t\tsrc += '\\nelse ';\r\n\t\t\t}\r\n\r\n\t\t\tif (i < maxTextures - 1) {\r\n\t\t\t\tsrc += `if(textureId < ${i}.5)`;\r\n\t\t\t}\r\n\r\n\t\t\tsrc += '\\n{';\r\n\t\t\tsrc += `\\n\\ttexColor = texture2D(uSamplers[${i}], texCoord);`;\r\n\t\t\tsrc += '\\n}';\r\n\t\t}\r\n\r\n\t\tsrc += '\\n';\r\n\t\tsrc += '\\n';\r\n\r\n\t\treturn src;\r\n\t}\r\n}\r\n","declare module PIXI {\r\n\texport interface ObjectRenderer {\r\n\t\trenderer: WebGLRenderer;\r\n\t}\r\n\r\n\texport interface BaseTexture {\r\n\t\t_virtalBoundId: number;\r\n\t}\r\n}\r\n\r\nnamespace pixi_heaven.webgl {\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport ObjectRenderer = PIXI.ObjectRenderer;\r\n\timport settings = PIXI.settings;\r\n\timport GLBuffer = PIXI.glCore.GLBuffer;\r\n\timport VertexArrayObject = PIXI.glCore.VertexArrayObject;\r\n\r\n\timport WebGLRenderer = PIXI.WebGLRenderer;\r\n\timport Sprite = PIXI.Sprite;\r\n\r\n\timport premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n\r\n\tlet TICK = 1 << 20;\r\n\r\n\texport class BatchGroup {\r\n\t\ttextures: Array<BaseTexture> = [];\r\n\t\ttextureCount = 0;\r\n\t\tids: Array<Number> = [];\r\n\t\tsize = 0;\r\n\t\tstart = 0;\r\n\t\tblend = PIXI.BLEND_MODES.NORMAL;\r\n\t\tuniforms: any = null;\r\n\t}\r\n\r\n\texport abstract class MultiTextureSpriteRenderer extends ObjectRenderer {\r\n\t\tshaderVert = '';\r\n\t\tshaderFrag = '';\r\n\t\tMAX_TEXTURES_LOCAL = 32;\r\n\r\n\t\tabstract createVao(vertexBuffer: GLBuffer): PIXI.glCore.VertexArrayObject;\r\n\r\n\t\tabstract fillVertices(float32View: Float32Array, uint32View: Uint32Array,\r\n\t\t                      index: number, sprite: any, textureId: number): void;\r\n\r\n\t\tgetUniforms(spr: PIXI.Sprite): any {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tsyncUniforms(obj: any) {\r\n\t\t\tif (!obj) return;\r\n\t\t\tlet sh = this.shader;\r\n\t\t\tfor (let key in obj) {\r\n\t\t\t\tsh.uniforms[key] = obj[key];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tvertSize = 5;\r\n\t\tvertByteSize = this.vertSize * 4;\r\n\t\tsize = settings.SPRITE_BATCH_SIZE;\r\n\t\tbuffers: Array<BatchBuffer>;\r\n\t\tbuffersIndex: Array<Uint16Array>;\r\n\r\n\t\tbigMeshVertexBuffer: BatchBuffer = null;\r\n\r\n\t\tindices: Uint16Array;\r\n\r\n\t\tshader: PIXI.Shader;\r\n\r\n\t\tcurrentIndex = 0;\r\n\t\tgroups: Array<BatchGroup>;\r\n\t\tsprites: Array<any> = [];\r\n\r\n\t\tcountVertex = 0;\r\n\t\tcountIndex = 0;\r\n\r\n\t\tindexBuffer: GLBuffer;\r\n\t\tvertexBuffers: Array<GLBuffer> = [];\r\n\t\tindexBuffers: Array<GLBuffer> = [];\r\n\r\n\t\tvaos: Array<VertexArrayObject> = [];\r\n\t\tvao: VertexArrayObject;\r\n\t\tvaoMax = 2;\r\n\t\tvertexCount = 0;\r\n\r\n\t\tMAX_TEXTURES = 1;\r\n\t\tchangedIndexBuffer = 0;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.WebGLRenderer} renderer - The renderer this sprite batch works for.\r\n\t\t */\r\n\t\tconstructor(renderer: WebGLRenderer) {\r\n\t\t\tsuper(renderer);\r\n\r\n\t\t\tthis.indices = utils.createIndicesForQuads(this.size);\r\n\r\n\t\t\tthis.groups = [];\r\n\t\t\tfor (let k = 0; k < this.size; k++) {\r\n\t\t\t\tthis.groups[k] = new BatchGroup();\r\n\t\t\t}\r\n\r\n\t\t\tthis.vaoMax = 2;\r\n\t\t\tthis.vertexCount = 0;\r\n\r\n\t\t\tthis.renderer.on('prerender', this.onPrerender, this);\r\n\t\t}\r\n\r\n\t\tgenShader(){\r\n\t\t\tconst gl = this.renderer.gl;\r\n\r\n\t\t\tthis.MAX_TEXTURES = Math.min(this.MAX_TEXTURES_LOCAL, this.renderer.plugins['sprite'].MAX_TEXTURES);\r\n\r\n\t\t\tthis.shader = generateMultiTextureShader(this.shaderVert, this.shaderFrag, gl, this.MAX_TEXTURES);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets up the renderer context and necessary buffers.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tonContextChange() {\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\t// generate generateMultiTextureProgram, may be a better move?\r\n\t\t\tthis.genShader();\r\n\r\n\t\t\t// we use the second shader as the first one depending on your browser may omit aTextureId\r\n\t\t\t// as it is not used by the shader so is optimized out.\r\n\t\t\tthis.renderer.bindVao(null);\r\n\r\n\t\t\tthis.indexBuffer = GLBuffer.createIndexBuffer(gl, this.indices, gl.STATIC_DRAW);\r\n\r\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\r\n\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\tconst vertexBuffer = this.vertexBuffers[i] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t\t/* eslint-enable max-len */\r\n\r\n\t\t\t\t// build the vao object that will render..\r\n\t\t\t\tthis.vaos[i] = this.createVao(vertexBuffer);\r\n\t\t\t\tthis.indexBuffers[i] = GLBuffer.createIndexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t}\r\n\r\n\t\t\tif (!this.buffers) {\r\n\t\t\t\tthis.buffers = [];\r\n\t\t\t\tthis.buffersIndex = [];\r\n\t\t\t\tfor (let i = 1; i <= utils.nextPow2(this.size); i *= 2) {\r\n\t\t\t\t\tthis.buffers.push(new BatchBuffer(i * 4 * this.vertByteSize));\r\n\t\t\t\t}\r\n\t\t\t\tfor (let i = 1; i <= utils.nextPow2(this.size); i *= 2) {\r\n\t\t\t\t\tthis.buffersIndex.push(new Uint16Array(i * 6));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis.vao = this.vaos[0];\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Called before the renderer starts rendering.\r\n\t\t *\r\n\t\t */\r\n\t\tonPrerender() {\r\n\t\t\tthis.vertexCount = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the sprite object.\r\n\t\t *\r\n\t\t * @param {PIXI.Sprite} sprite - the sprite to render when using this spritebatch\r\n\t\t */\r\n\t\trender(element: any) {\r\n\t\t\t// if the uvs have not updated then no point rendering just yet!\r\n\t\t\tif (!element._texture._uvs) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!element._texture.baseTexture) {\r\n\t\t\t\t//WTF, Rpgmaker MV?\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet countVertex = 4;\r\n\t\t\tlet countIndex = 6;\r\n\r\n\t\t\tif (element.indices) {\r\n\t\t\t\t//mesh !\r\n\t\t\t\tcountVertex = (element.vertices || element.vertexData).length / 2;\r\n\t\t\t\tcountIndex = element.indices.length;\r\n\r\n\t\t\t\telement.calculateVertices();\r\n\t\t\t}\r\n\t\t\t// TODO set blend modes..\r\n\t\t\t// check texture..\r\n\t\t\tif (this.currentIndex >= this.size ||\r\n\t\t\t\tcountVertex + this.countVertex > this.size * 4 ||\r\n\t\t\t\tcountIndex + this.countIndex > this.size * 6) {\r\n\t\t\t\tthis.flush();\r\n\t\t\t}\r\n\r\n\t\t\tif (countVertex > this.size * 4 ||\r\n\t\t\t\tcountIndex > this.size * 6) {\r\n\t\t\t\tthis.renderSingleMesh(element);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis.countVertex += countVertex;\r\n\t\t\tthis.countIndex += countIndex;\r\n\r\n\t\t\t// push a texture.\r\n\t\t\t// increment the batchsize\r\n\t\t\tthis.sprites[this.currentIndex++] = element;\r\n\t\t}\r\n\r\n\t\trenderSingleMesh(mesh: mesh.Mesh) {\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst gl = renderer.gl;\r\n\r\n\t\t\tthis.renderer.state.setBlendMode(\r\n\t\t\t\tpremultiplyBlendMode[mesh._texture.baseTexture.premultipliedAlpha ? 1 : 0][mesh.blendMode]\r\n\t\t\t);\r\n\r\n\t\t\tconst textureId = this.renderer.bindTexture(mesh._texture.baseTexture);\r\n\r\n\t\t\tconst curVertexCount = this.vertexCount;\r\n\t\t\tconst isNewBuffer = this.checkVaoMax();\r\n\r\n\t\t\tif (!this.bigMeshVertexBuffer ||\r\n\t\t\t\tthis.bigMeshVertexBuffer.vertices.byteLength < this.vertByteSize * mesh.vertices.length) {\r\n\t\t\t\tthis.bigMeshVertexBuffer = new BatchBuffer(this.vertByteSize * mesh.vertices.length);\r\n\t\t\t}\r\n\r\n\t\t\tmesh.calculateVertices();\r\n\t\t\tthis.fillVertices(this.bigMeshVertexBuffer.float32View, this.bigMeshVertexBuffer.uint32View,\r\n\t\t\t\t0, mesh, textureId);\r\n\r\n\t\t\tthis.vertexBuffers[curVertexCount].upload(this.bigMeshVertexBuffer.vertices, 0, !isNewBuffer);\r\n\t\t\tthis.indexBuffers[curVertexCount].upload(mesh.indices, 0, false);\r\n\r\n\t\t\tgl.drawElements(gl.TRIANGLES, mesh.indices.length, gl.UNSIGNED_SHORT, 0);\r\n\t\t}\r\n\r\n\t\tcheckVaoMax() {\r\n\t\t\tif (settings.CAN_UPLOAD_SAME_BUFFER) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst gl = renderer.gl;\r\n\r\n\t\t\t// this is still needed for IOS performance..\r\n\t\t\t// it really does not like uploading to the same buffer in a single frame!\r\n\t\t\tif (this.vaoMax <= this.vertexCount) {\r\n\t\t\t\tthis.vaoMax++;\r\n\r\n\t\t\t\t/* eslint-disable max-len */\r\n\t\t\t\tconst vertexBuffer = this.vertexBuffers[this.vertexCount] = GLBuffer.createVertexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t\tthis.vaos[this.vertexCount] = this.createVao(vertexBuffer);\r\n\t\t\t\tthis.indexBuffers[this.vertexCount] = GLBuffer.createIndexBuffer(gl, null, gl.STREAM_DRAW);\r\n\t\t\t\t/* eslint-enable max-len */\r\n\r\n\t\t\t\tthis.vertexCount++;\r\n\t\t\t} else {\r\n\t\t\t\trenderer.bindVao(this.vaos[this.vertexCount]);\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the content and empties the current batch.\r\n\t\t *\r\n\t\t */\r\n\t\tflush() {\r\n\t\t\tif (this.currentIndex === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst MAX_TEXTURES = this.MAX_TEXTURES;\r\n\r\n\t\t\tlet np2 = utils.nextPow2(Math.ceil(this.countVertex / 4));\r\n\t\t\tlet log2 = utils.log2(np2);\r\n\t\t\tconst buffer = this.buffers[log2];\r\n\r\n\t\t\tnp2 = utils.nextPow2(Math.ceil(this.countIndex / 6));\r\n\t\t\tlog2 = utils.log2(np2);\r\n\t\t\tconst bufferIndex = this.buffersIndex[log2];\r\n\r\n\t\t\tconst sprites = this.sprites;\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tconst float32View = buffer.float32View;\r\n\t\t\tconst uint32View = buffer.uint32View;\r\n\r\n\t\t\t// const touch = 0;// this.renderer.textureGC.count;\r\n\r\n\t\t\tlet nextTexture: any;\r\n\t\t\tlet currentTexture: BaseTexture;\r\n\t\t\tlet groupCount = 1;\r\n\t\t\tlet textureCount = 0;\r\n\t\t\tlet currentGroup = groups[0];\r\n\t\t\tlet blendMode = premultiplyBlendMode[\r\n\t\t\t\t(sprites[0] as any)._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\r\n\t\t\tlet currentUniforms: any = this.getUniforms(sprites[0]);\r\n\t\t\tlet hasMesh = false;\r\n\r\n\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\tcurrentGroup.start = 0;\r\n\t\t\tcurrentGroup.blend = blendMode;\r\n\t\t\tcurrentGroup.uniforms = currentUniforms;\r\n\r\n\t\t\tTICK++;\r\n\r\n\t\t\tlet i;\r\n\t\t\tlet posVertex = 0;\r\n\t\t\tlet posIndex = 0;\r\n\r\n\t\t\tfor (i = 0; i < this.currentIndex; ++i) {\r\n\t\t\t\t// upload the sprite elemetns...\r\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\r\n\r\n\t\t\t\t// upload the sprite elemetns...\r\n\t\t\t\t// they have all ready been calculated so we just need to push them into the buffer.\r\n\t\t\t\tconst sprite = sprites[i] as any;\r\n\r\n\t\t\t\tsprites[i] = null;\r\n\r\n\t\t\t\tnextTexture = sprite._texture.baseTexture;\r\n\r\n\t\t\t\tconst spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\r\n\r\n\t\t\t\tif (blendMode !== spriteBlendMode) {\r\n\t\t\t\t\t// finish a group..\r\n\t\t\t\t\tblendMode = spriteBlendMode;\r\n\r\n\t\t\t\t\t// force the batch to break!\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t\tTICK++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst uniforms = i == 0 ? currentUniforms : this.getUniforms(sprite);\r\n\t\t\t\tif (currentUniforms !== uniforms) {\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t\tTICK++;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentTexture !== nextTexture) {\r\n\t\t\t\t\tcurrentTexture = nextTexture;\r\n\r\n\t\t\t\t\tif (nextTexture._enabled !== TICK) {\r\n\t\t\t\t\t\tif (textureCount === MAX_TEXTURES) {\r\n\t\t\t\t\t\t\tTICK++;\r\n\r\n\t\t\t\t\t\t\ttextureCount = 0;\r\n\t\t\t\t\t\t\tcurrentGroup.size = posIndex - currentGroup.start;\r\n\t\t\t\t\t\t\tcurrentGroup = groups[groupCount++];\r\n\t\t\t\t\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\t\t\t\t\tcurrentGroup.blend = blendMode;\r\n\t\t\t\t\t\t\tcurrentGroup.start = posIndex;\r\n\t\t\t\t\t\t\tcurrentGroup.uniforms = currentUniforms;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnextTexture._enabled = TICK;\r\n\t\t\t\t\t\tnextTexture._virtalBoundId = textureCount;\r\n\r\n\t\t\t\t\t\tcurrentGroup.textures[currentGroup.textureCount++] = nextTexture;\r\n\t\t\t\t\t\tcurrentGroup.uniforms = uniforms;\r\n\t\t\t\t\t\ttextureCount++;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fillVertices(float32View, uint32View, posVertex * this.vertSize, sprite, nextTexture._virtalBoundId);\r\n\r\n\t\t\t\tif (sprite.indices) {\r\n\t\t\t\t\tconst len = sprite.indices.length;\r\n\t\t\t\t\tfor (let k=0; k<len; k++) {\r\n\t\t\t\t\t\tbufferIndex[posIndex++] = posVertex + sprite.indices[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\thasMesh = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 1;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 2;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 2;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 3;\r\n\t\t\t\t}\r\n\t\t\t\tposVertex += sprite.vertexData.length / 2;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentGroup.size = posIndex - currentGroup.start;\r\n\r\n\t\t\tconst curVertexCount = this.vertexCount;\r\n\t\t\tconst isNewBuffer = this.checkVaoMax();\r\n\r\n\t\t\tthis.vertexBuffers[curVertexCount].upload(buffer.vertices, 0, !isNewBuffer);\r\n\t\t\tif (hasMesh) {\r\n\t\t\t\tthis.indexBuffers[curVertexCount].upload(bufferIndex, 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.indexBuffer.bind();\r\n\t\t\t}\r\n\r\n\t\t\tcurrentUniforms = null;\r\n\t\t\t// render the groups..\r\n\t\t\tfor (i = 0; i < groupCount; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst groupTextureCount = group.textureCount;\r\n\r\n\t\t\t\tif (group.uniforms !== currentUniforms) {\r\n\t\t\t\t\tthis.syncUniforms(group.uniforms);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < groupTextureCount; j++) {\r\n\t\t\t\t\tthis.renderer.bindTexture(group.textures[j], j, true);\r\n\t\t\t\t\tgroup.textures[j]._virtalBoundId = -1;\r\n\r\n\t\t\t\t\tconst v = this.shader.uniforms.samplerSize;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tv[0] = group.textures[j].realWidth;\r\n\t\t\t\t\t\tv[1] = group.textures[j].realHeight;\r\n\t\t\t\t\t\tthis.shader.uniforms.samplerSize = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set the blend mode..\r\n\t\t\t\tthis.renderer.state.setBlendMode(group.blend);\r\n\r\n\t\t\t\tgl.drawElements(gl.TRIANGLES, group.size, gl.UNSIGNED_SHORT, group.start * 2);\r\n\t\t\t}\r\n\r\n\t\t\t// reset sprites for the next flush\r\n\t\t\tthis.currentIndex = 0;\r\n\t\t\tthis.countVertex = 0;\r\n\t\t\tthis.countIndex = 0;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Starts a new sprite batch.\r\n\t\t */\r\n\t\tstart() {\r\n\t\t\tthis.renderer.bindShader(this.shader);\r\n\r\n\t\t\tif (settings.CAN_UPLOAD_SAME_BUFFER) {\r\n\t\t\t\t// bind buffer #0, we don't need others\r\n\t\t\t\tthis.renderer.bindVao(this.vaos[this.vertexCount]);\r\n\r\n\t\t\t\tthis.vertexBuffers[this.vertexCount].bind();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Stops and flushes the current batch.\r\n\t\t *\r\n\t\t */\r\n\t\tstop() {\r\n\t\t\tthis.flush();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Destroys the SpriteRenderer.\r\n\t\t *\r\n\t\t */\r\n\t\tdestroy() {\r\n\t\t\tfor (let i = 0; i < this.vaoMax; i++) {\r\n\t\t\t\tif (this.vertexBuffers[i]) {\r\n\t\t\t\t\tthis.vertexBuffers[i].destroy();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.indexBuffers[i]) {\r\n\t\t\t\t\tthis.indexBuffers[i].destroy();\r\n\t\t\t\t}\r\n\t\t\t\tif (this.vaos[i]) {\r\n\t\t\t\t\tthis.vaos[i].destroy();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this.indexBuffer) {\r\n\t\t\t\tthis.indexBuffer.destroy();\r\n\t\t\t}\r\n\r\n\t\t\tthis.renderer.off('prerender', this.onPrerender, this);\r\n\r\n\t\t\tsuper.destroy();\r\n\r\n\t\t\tif (this.shader) {\r\n\t\t\t\tthis.shader.destroy();\r\n\t\t\t\tthis.shader = null;\r\n\t\t\t}\r\n\r\n\t\t\tthis.vertexBuffers = null;\r\n\t\t\tthis.vaos = null;\r\n\t\t\tthis.indexBuffer = null;\r\n\t\t\tthis.indices = null;\r\n\r\n\t\t\tthis.sprites = null;\r\n\r\n\t\t\tfor (let i = 0; i < this.buffers.length; ++i) {\r\n\t\t\t\tthis.buffers[i].destroy();\r\n\t\t\t}\r\n\t\t\tthis.buffersIndex = null;\r\n\t\t}\r\n\t}\r\n}\r\n","///<reference types=\"webgl-ext\"/>\r\n\r\nmodule pixi_heaven {\r\n    export interface Extensions {\r\n        depthTexture: WebGLDepthTexture;\r\n        floatTexture: OESTextureFloat;\r\n    }\r\n\r\n\texport class AtlasManager {\r\n\t\t/**\r\n\t\t * A reference to the current renderer\r\n\t\t *\r\n\t\t * @member {PIXI.WebGLRenderer}\r\n\t\t */\r\n\t\trenderer: PIXI.WebGLRenderer;\r\n\r\n\t\t/**\r\n\t\t * The current WebGL rendering context\r\n\t\t *\r\n\t\t * @member {WebGLRenderingContext}\r\n\t\t */\r\n\t\tgl: WebGLRenderingContext;\r\n\r\n\t\textensions: Extensions = null;\r\n\r\n\t\tconstructor(renderer: PIXI.WebGLRenderer) {\r\n\t\t\tthis.renderer = renderer;\r\n\r\n\t\t\trenderer.on('context', this.onContextChange);\r\n\t\t}\r\n\r\n\t\tonContextChange = (gl: WebGLRenderingContext) => {\r\n\t\t\tthis.gl = gl;\r\n\r\n\t\t\tif (settings.TEXTURE_MANAGER) {\r\n\t\t\t\tthis.renderer.textureManager.updateTexture = this.updateTexture;\r\n\t\t\t\tthis.renderer.textureManager.destroyTexture = this.destroyTexture;\r\n\t\t\t}\r\n\r\n\t\t\tthis.extensions = {\r\n                depthTexture: gl.getExtension('WEBKIT_WEBGL_depth_texture'),\r\n                floatTexture: gl.getExtension('OES_texture_float'),\r\n\t\t\t};\r\n\t\t};\r\n\r\n\r\n\t\t//TODO: make boundTextures faster?\r\n\r\n\t\tupdateTexture = (texture_: PIXI.BaseTexture | PIXI.Texture, location?: number) => {\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst tm = renderer.textureManager;\r\n\t\t\tconst gl = this.gl;\r\n\r\n\t\t\tconst texture: any = (texture_ as any).baseTexture || texture_;\r\n\t\t\tconst isRenderTexture = !!texture._glRenderTargets;\r\n\r\n\t\t\tif (!texture.hasLoaded) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tconst boundTextures: Array<PIXI.BaseTexture> = this.renderer.boundTextures as any;\r\n\r\n\t\t\t// if the location is undefined then this may have been called by n event.\r\n\t\t\t// this being the cas e the texture may already be bound to a slot. As a texture can only be bound once\r\n\t\t\t// we need to find its current location if it exists.\r\n\t\t\tif (location === undefined) {\r\n\t\t\t\tlocation = 0;\r\n\r\n\t\t\t\t// TODO maybe we can use texture bound ids later on...\r\n\t\t\t\t// check if texture is already bound..\r\n\t\t\t\tfor (let i = 0; i < boundTextures.length; ++i) {\r\n\t\t\t\t\tif (boundTextures[i] === texture) {\r\n\t\t\t\t\t\tlocation = i;\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tboundTextures[location] = texture;\r\n\r\n\t\t\tgl.activeTexture(gl.TEXTURE0 + location);\r\n\r\n\t\t\tlet glTexture = texture._glTextures[this.renderer.CONTEXT_UID];\r\n\r\n\t\t\tif (!glTexture) {\r\n\t\t\t\tif (isRenderTexture) {\r\n\t\t\t\t\tconst renderTarget = new PIXI.RenderTarget(\r\n\t\t\t\t\t\tthis.gl,\r\n\t\t\t\t\t\ttexture.width,\r\n\t\t\t\t\t\ttexture.height,\r\n\t\t\t\t\t\ttexture.scaleMode,\r\n\t\t\t\t\t\ttexture.resolution\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\trenderTarget.resize(texture.width, texture.height);\r\n\t\t\t\t\ttexture._glRenderTargets[this.renderer.CONTEXT_UID] = renderTarget;\r\n\t\t\t\t\tglTexture = renderTarget.texture;\r\n\r\n\t\t\t\t\tif (!renderer._activeRenderTarget.root)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trenderer._activeRenderTarget.frameBuffer.bind();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tglTexture = new PIXI.glCore.GLTexture(this.gl, null, null, null, null);\r\n\t\t\t\t\tglTexture.bind(location);\r\n\t\t\t\t}\r\n\t\t\t\ttexture._glTextures[this.renderer.CONTEXT_UID] = glTexture;\r\n\r\n\t\t\t\ttexture.on('update', tm.updateTexture, tm);\r\n\t\t\t\ttexture.on('dispose', tm.destroyTexture, tm);\r\n\t\t\t} else {\r\n\t\t\t\tglTexture.bind();\r\n\r\n\t\t\t\tif (isRenderTexture) {\r\n\t\t\t\t\ttexture._glRenderTargets[this.renderer.CONTEXT_UID].resize(texture.width, texture.height);\r\n\r\n\t\t\t\t\tif (!renderer._activeRenderTarget.root)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\trenderer._activeRenderTarget.frameBuffer.bind();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tglTexture.premultiplyAlpha = texture.premultipliedAlpha;\r\n\r\n\t\t\tif (!isRenderTexture) {\r\n                if (!texture.resource) {\r\n                    glTexture.upload(texture.source);\r\n                } else if (!texture.resource.onTextureUpload(renderer, texture, glTexture)) {\r\n                    glTexture.uploadData(null, texture.realWidth, texture.realHeight);\r\n                }\r\n            }\r\n\r\n\t\t\t// lets only update what changes..\r\n\t\t\tif (texture.forceUploadStyle) {\r\n\t\t\t\tthis.setStyle(texture, glTexture);\r\n\t\t\t}\r\n\t\t\tglTexture._updateID = texture._updateID;\r\n\t\t\treturn glTexture;\r\n\t\t};\r\n\r\n\t\tsetStyle(texture: PIXI.BaseTexture,\r\n\t\t         glTexture: PIXI.glCore.GLTexture) {\r\n\t\t\tconst gl = this.gl;\r\n\r\n\t\t\tif ((texture as any).isPowerOfTwo) {\r\n\t\t\t\tif (texture.mipmap) {\r\n\t\t\t\t\tglTexture.enableMipmap();\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (texture.wrapMode === PIXI.WRAP_MODES.CLAMP) {\r\n\t\t\t\t\tglTexture.enableWrapClamp();\r\n\t\t\t\t}\r\n\t\t\t\telse if (texture.wrapMode === PIXI.WRAP_MODES.REPEAT) {\r\n\t\t\t\t\tglTexture.enableWrapRepeat();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tglTexture.enableWrapMirrorRepeat();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tglTexture.enableWrapClamp();\r\n\t\t\t}\r\n\r\n\t\t\tif (texture.scaleMode === PIXI.SCALE_MODES.NEAREST) {\r\n\t\t\t\tglTexture.enableNearestScaling();\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tglTexture.enableLinearScaling();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdestroy() {\r\n\t\t\tthis.renderer.off('context', this.onContextChange);\r\n\t\t}\r\n\r\n\t\tdestroyTexture = (texture_: PIXI.BaseTexture | PIXI.Texture, skipRemove?: boolean) =>\r\n\t\t{\r\n\t\t\tlet texture: any = (texture_ as any).baseTexture || texture_;\r\n\r\n\t\t\tif (!texture.hasLoaded)\r\n\t\t\t{\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst tm = renderer.textureManager as any;\r\n\r\n\t\t\tconst uid = renderer.CONTEXT_UID;\r\n\t\t\tconst glTextures = texture._glTextures;\r\n\t\t\tconst glRenderTargets = texture._glRenderTargets;\r\n\r\n\t\t\tif (glTextures[uid])\r\n\t\t\t{\r\n\t\t\t\trenderer.unbindTexture(texture);\r\n\r\n\t\t\t\tglTextures[uid].destroy();\r\n\t\t\t\ttexture.off('update', tm.updateTexture, tm);\r\n\t\t\t\ttexture.off('dispose', tm.destroyTexture, tm);\r\n\r\n\t\t\t\tdelete glTextures[uid];\r\n\r\n\t\t\t\tif (!skipRemove)\r\n\t\t\t\t{\r\n\t\t\t\t\tconst i = tm._managedTextures.indexOf(texture);\r\n\r\n\t\t\t\t\tif (i !== -1)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tPIXI.utils.removeItems(tm._managedTextures, i, 1);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (glRenderTargets && glRenderTargets[uid])\r\n\t\t\t{\r\n\t\t\t\tif (renderer._activeRenderTarget === glRenderTargets[uid]) {\r\n\t\t\t\t\trenderer.bindRenderTarget((renderer as any).rootRenderTarget);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tglRenderTargets[uid].destroy();\r\n\t\t\t\tdelete glRenderTargets[uid];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('atlas', AtlasManager);\r\n}\r\n","declare module PIXI {\r\n\tinterface BaseTexture {\r\n\t\tuid: number;\r\n\t\t_updateID: number;\r\n\t\t_mips: Array<ImageData>;\r\n\t\tresource: pixi_heaven.ITextureResource\r\n\t\tforceUploadStyle: boolean;\r\n\r\n\t\tgenerateMips(levels: number): void;\r\n\t}\r\n\r\n\tinterface BaseRenderTexture {\r\n\t\tuid: number;\r\n\r\n\t\tgenerateMips(levels: number): void;\r\n\t}\r\n}\r\n\r\nmodule pixi_heaven {\r\n\tPIXI.BaseTexture.prototype._updateID = 0;\r\n\tPIXI.BaseTexture.prototype.resource = null;\r\n\tPIXI.BaseTexture.prototype.forceUploadStyle = true;\r\n\r\n\tlet tmpCanvas: HTMLCanvasElement;\r\n\r\n\tPIXI.BaseTexture.prototype.generateMips = function (levels: number) {\r\n\t\tif (!levels) return;\r\n\t\tlet src = this.source;\r\n\r\n\t\tif (!tmpCanvas) tmpCanvas = document.createElement(\"canvas\");\r\n\r\n\t\tlet sw = ((src.width + 1) >> 1) << 1;\r\n\t\tlet h = src.height;\r\n\t\tlet sh = 0;\r\n\t\tfor (let i = 1; i <= levels; i++) {\r\n\t\t\tsh += h;\r\n\t\t\th = (h + 1) >> 1;\r\n\t\t}\r\n\r\n\t\tif (tmpCanvas.width < sw) {\r\n\t\t\ttmpCanvas.width = sw;\r\n\t\t}\r\n\t\tif (tmpCanvas.height < sh) {\r\n\t\t\ttmpCanvas.height = sh;\r\n\t\t}\r\n\t\tlet context = tmpCanvas.getContext(\"2d\");\r\n\t\tcontext.clearRect(0, 0, sw, sh);\r\n\r\n\t\tthis._mips = [];\r\n\r\n\t\tlet w = src.width;\r\n\t\th = src.height;\r\n\t\tcontext.drawImage(src, 0, 0, w, h, 0, 0, w / 2, h / 2);\r\n\t\tlet h1 = 0;\r\n\t\tfor (let i = 1; i <= levels; i++) {\r\n\t\t\tw = (w + 1) >> 1;\r\n\t\t\th = (h + 1) >> 1;\r\n\t\t\tlet data = context.getImageData(0, h1, w, h);\r\n\t\t\tthis._mips.push({\r\n\t\t\t\twidth: data.width,\r\n\t\t\t\theight: data.height,\r\n\t\t\t\tdata: new Uint8Array(data.data)\r\n\t\t\t});\r\n\t\t\tif (i < levels) {\r\n\t\t\t\tcontext.drawImage(tmpCanvas, 0, h1, w, h, 0, h1 + h, w / 2, h / 2);\r\n\t\t\t\th1 += h;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}","declare module PIXI {\r\n    namespace GroupD8 {\r\n        export function isVertical(rotation: number): boolean;\r\n    }\r\n}\r\n\r\nif (!PIXI.GroupD8.isVertical) {\r\n    PIXI.GroupD8.isVertical = function(rotation: number) {\r\n        return (rotation & 3) === 2;\r\n    }\r\n}\r\n","declare module PIXI {\r\n\tinterface BaseTexture {\r\n\t\tuid: number;\r\n\t\t_updateID: number;\r\n\t\tresource: pixi_heaven.ITextureResource\r\n\t\tforceUploadStyle: boolean;\r\n\t}\r\n\r\n\tinterface BaseRenderTexture {\r\n\t\tuid: number;\r\n\t}\r\n}\r\n\r\ndeclare module PIXI.glCore {\r\n\tinterface GLTexture {\r\n\t\t_updateID: number;\r\n\t}\r\n}\r\n\r\nmodule pixi_heaven {\r\n\tPIXI.glCore.GLTexture.prototype._updateID = -1;\r\n\tPIXI.BaseTexture.prototype._updateID = 0;\r\n\tPIXI.BaseTexture.prototype.resource = null;\r\n\tPIXI.BaseTexture.prototype.forceUploadStyle = true;\r\n\r\n\tfunction bindTexture(texture: any,\r\n\t                     location?: number, forceLocation?: boolean): number {\r\n\t\ttexture = texture || this.emptyTextures[location];\r\n\t\ttexture = texture.baseTexture || texture;\r\n\t\ttexture.touched = this.textureGC.count;\r\n\r\n\t\tif (!forceLocation) {\r\n\t\t\t// TODO - maybe look into adding boundIds.. save us the loop?\r\n\t\t\tfor (let i = 0; i < this.boundTextures.length; i++) {\r\n\t\t\t\tif (this.boundTextures[i] === texture) {\r\n\t\t\t\t\treturn i;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (location === undefined) {\r\n\t\t\t\tthis._nextTextureLocation++;\r\n\t\t\t\tthis._nextTextureLocation %= this.boundTextures.length;\r\n\t\t\t\tlocation = this.boundTextures.length - this._nextTextureLocation - 1;\r\n\t\t\t}\r\n\t\t}\r\n\t\telse {\r\n\t\t\tlocation = location || 0;\r\n\t\t}\r\n\r\n\t\tconst gl = this.gl;\r\n\t\tconst glTexture = texture._glTextures[this.CONTEXT_UID];\r\n\t\tif (texture === this.emptyTextures[location]) {\r\n\t\t\tglTexture._updateID = 0;\r\n\t\t}\r\n\r\n\t\tif (!glTexture || glTexture._updateID < texture._updateID) {\r\n\t\t\t// this will also bind the texture..\r\n\t\t\tthis.textureManager.updateTexture(texture, location);\r\n\t\t}\r\n\t\telse {\r\n\t\t\t// bind the current texture\r\n\t\t\tthis.boundTextures[location] = texture;\r\n\t\t\tgl.activeTexture(gl.TEXTURE0 + location);\r\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, glTexture.texture);\r\n\t\t}\r\n\r\n\t\treturn location;\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.prototype.bindTexture = bindTexture;\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\tconst tempPoint = new PIXI.Point();\r\n\tconst tempPolygon = new PIXI.Polygon();\r\n\r\n\t/**\r\n\t * Base mesh class\r\n\t * @class\r\n\t * @extends PIXI.Container\r\n\t * @memberof PIXI.mesh\r\n\t */\r\n\texport class Mesh extends PIXI.Container implements ITextureAnimationTarget {\r\n\t\t/**\r\n\t\t * The texture of the Mesh\r\n\t\t *\r\n\t\t * @member {PIXI.Texture}\r\n\t\t * @private\r\n\t\t */\r\n\t\t_texture: PIXI.Texture;\r\n\r\n\t\tanimState: AnimationState = null;\r\n\r\n\t\t/**\r\n\t\t * The Uvs of the Mesh\r\n\t\t *\r\n\t\t * @member {Float32Array}\r\n\t\t */\r\n\t\tuvs: Float32Array;\r\n\r\n\t\t/**\r\n\t\t * An array of vertices\r\n\t\t *\r\n\t\t * @member {Float32Array}\r\n\t\t */\r\n\t\tvertices: Float32Array;\r\n\r\n\t\t/*\r\n\t\t * @member {Uint16Array} An array containing the indices of the vertices\r\n\t\t */\r\n\t\tindices: Uint16Array;\r\n\r\n\t\t/**\r\n\t\t * Two colors per vertex: dark, light. Please fill with 0x0 and 0xffffffff by default.\r\n\t\t *\r\n\t\t * @member {Uint32Array}\r\n\t\t */\r\n\t\tcolors: Uint32Array;\r\n\r\n\t\t/**\r\n\t\t * The way the Mesh should be drawn, can be any of the {@link PIXI.mesh.Mesh.DRAW_MODES} consts\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @see PIXI.mesh.Mesh.DRAW_MODES\r\n\t\t */\r\n\t\tdrawMode: number;\r\n\r\n\t\t/**\r\n\t\t * Version of mesh uvs are dirty or not\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tdirty = 0;\r\n\r\n\t\t/**\r\n\t\t * Version of mesh indices\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tindexDirty = 0;\r\n\r\n\t\t/**\r\n\t\t * The blend mode to be applied to the mesh. Set to `PIXI.BLEND_MODES.NORMAL` to remove\r\n\t\t * any blend mode.\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @default PIXI.BLEND_MODES.NORMAL\r\n\t\t * @see PIXI.BLEND_MODES\r\n\t\t */\r\n\t\tblendMode = PIXI.BLEND_MODES.NORMAL;\r\n\r\n\t\t/**\r\n\t\t * Triangles in canvas mode are automatically antialiased, use this value to force triangles\r\n\t\t * to overlap a bit with each other.\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tcanvasPadding = 0;\r\n\r\n\t\t/**\r\n\t\t * The tint applied to the mesh. This is a [r,g,b] value. A value of [1,1,1] will remove any\r\n\t\t * tint effect.\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\ttintRgb = new Float32Array([1, 1, 1]);\r\n\r\n\t\t/**\r\n\t\t * A map of renderer IDs to webgl render data\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @member {object<number, object>}\r\n\t\t */\r\n\t\t_glDatas: { [key: number]: any } = {};\r\n\r\n\t\t/**\r\n\t\t * whether or not upload uvTransform to shader\r\n\t\t * if its false, then uvs should be pre-multiplied\r\n\t\t * if you change it for generated mesh, please call 'refresh(true)'\r\n\t\t * @member {boolean}\r\n\t\t * @default false\r\n\t\t */\r\n\t\tuploadUvTransform = false;\r\n\r\n\t\t/**\r\n\t\t * Plugin that is responsible for rendering this element.\r\n\t\t * Allows to customize the rendering process without overriding '_renderWebGL' & '_renderCanvas' methods.\r\n\t\t * @member {string}\r\n\t\t * @default 'mesh'\r\n\t\t */\r\n\t\tpluginName = settings.MESH_PLUGIN;\r\n\r\n\t\t/**\r\n\t\t * transform that is applied to UV to get the texture coords\r\n\t\t * its updated independently from texture uvTransform\r\n\t\t * updates of uvs are tied to that thing\r\n\t\t *\r\n\t\t * @member {PIXI.TextureMatrix}\r\n\t\t * @private\r\n\t\t */\r\n\t\t_uvTransform: PIXI.TextureMatrix;\r\n\r\n\t\t/**\r\n\t\t * Same as sprite vertexData\r\n\t\t */\r\n\t\tvertexData: Float32Array = null;\r\n\r\n\t\t/**\r\n\t\t * Same as sprite maskVertexData\r\n\t\t */\r\n\t\tmaskVertexData: Float32Array = null;\r\n\r\n\t\tmaskSprite: PIXI.Sprite = null;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.Texture} texture - The texture to use\r\n\t\t * @param {Float32Array} [vertices] - if you want to specify the vertices\r\n\t\t * @param {Float32Array} [uvs] - if you want to specify the uvs\r\n\t\t * @param {Uint16Array} [indices] - if you want to specify the indices\r\n\t\t * @param {number} [drawMode] - the drawMode, can be any of the Mesh.DRAW_MODES consts\r\n\t\t */\r\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array,\r\n\t\t            drawMode: number = PIXI.mesh.Mesh.DRAW_MODES.TRIANGLE_MESH) {\r\n\t\t\tsuper();\r\n\t\t\ttexture = texture || PIXI.Texture.EMPTY;\r\n\t\t\tthis._texture = texture;\r\n\r\n\t\t\tif (!texture.baseTexture.hasLoaded) {\r\n\t\t\t\ttexture.once('update', this._onTextureUpdate, this);\r\n\t\t\t}\r\n\r\n\t\t\tthis.uvs = uvs || new Float32Array([\r\n\t\t\t\t0, 0,\r\n\t\t\t\t1, 0,\r\n\t\t\t\t1, 1,\r\n\t\t\t\t0, 1]);\r\n\r\n\t\t\tthis.vertices = vertices || new Float32Array([\r\n\t\t\t\t0, 0,\r\n\t\t\t\t100, 0,\r\n\t\t\t\t100, 100,\r\n\t\t\t\t0, 100]);\r\n\r\n\t\t\t//  TODO auto generate this based on draw mode!\r\n\t\t\tthis.indices = indices || new Uint16Array([0, 1, 3, 2]);\r\n\r\n\t\t\tthis.colors = null;\r\n\r\n\t\t\tthis.drawMode = drawMode;\r\n\r\n\t\t\t/**\r\n\t\t\t * transform that is applied to UV to get the texture coords\r\n\t\t\t * its updated independently from texture uvTransform\r\n\t\t\t * updates of uvs are tied to that thing\r\n\t\t\t *\r\n\t\t\t * @member {PIXI.TextureMatrix}\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis._uvTransform = new PIXI.TextureMatrix(texture, 0);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the object transform for rendering\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tupdateTransform() {\r\n\t\t\tthis.refresh();\r\n\r\n\t\t\t//TODO: move it somewhere, default heaven updateTransform\r\n\t\t\tthis._boundsID++;\r\n\r\n\t\t\tthis.transform.updateTransform(this.parent.transform);\r\n\r\n\t\t\tthis.worldAlpha = this.alpha * this.parent.worldAlpha;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\t\tthis.color.updateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, j = this.children.length; i < j; ++i) {\r\n\t\t\t\tconst child = this.children[i];\r\n\r\n\t\t\t\tif (child.visible) {\r\n\t\t\t\t\tchild.updateTransform();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the object using the WebGL renderer\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {PIXI.WebGLRenderer} renderer - a reference to the WebGL renderer\r\n\t\t */\r\n\t\t_renderWebGL(renderer: PIXI.WebGLRenderer) {\r\n\t\t\trenderer.setObjectRenderer(renderer.plugins[this.pluginName]);\r\n\t\t\trenderer.plugins[this.pluginName].render(this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the object using the Canvas renderer\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {PIXI.CanvasRenderer} renderer - The canvas renderer.\r\n\t\t */\r\n\t\t_renderCanvas(renderer: PIXI.CanvasRenderer) {\r\n\t\t\trenderer.plugins['mesh'].render(this);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * When the texture is updated, this event will fire to update the scale and frame\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onTextureUpdate() {\r\n\t\t\tthis._uvTransform.texture = this._texture;\r\n\t\t\tthis.color.pma = this._texture.baseTexture.premultipliedAlpha;\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * multiplies uvs only if uploadUvTransform is false\r\n\t\t * call it after you change uvs manually\r\n\t\t * make sure that texture is valid\r\n\t\t */\r\n\t\tmultiplyUvs() {\r\n\t\t\tif (!this.uploadUvTransform) {\r\n\t\t\t\t(this._uvTransform as any).multiplyUvs(this.uvs);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes uvs for generated meshes (rope, plane)\r\n\t\t * sometimes refreshes vertices too\r\n\t\t *\r\n\t\t * @param {boolean} [forceUpdate=false] if true, matrices will be updated any case\r\n\t\t */\r\n\t\trefresh(forceUpdate = false) {\r\n\t\t\tif (this._uvTransform.update(forceUpdate)) {\r\n\t\t\t\tthis._refreshUvs();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * re-calculates mesh coords\r\n\t\t * @protected\r\n\t\t */\r\n\t\t_refreshUvs() {\r\n\t\t\t/* empty */\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Returns the bounds of the mesh as a rectangle. The bounds calculation takes the worldTransform into account.\r\n\t\t *\r\n\t\t */\r\n\t\t_calculateBounds() {\r\n\t\t\t// TODO - we can cache local bounds and use them if they are dirty (like graphics)\r\n\t\t\tthis._bounds.addVertices(this.transform as any, this.vertices as any, 0, this.vertices.length);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Tests if a point is inside this mesh. Works only for TRIANGLE_MESH\r\n\t\t *\r\n\t\t * @param {PIXI.Point} point - the point to test\r\n\t\t * @return {boolean} the result of the test\r\n\t\t */\r\n\t\tcontainsPoint(point: PIXI.PointLike) {\r\n\t\t\tif (!this.getBounds().contains(point.x, point.y)) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tthis.worldTransform.applyInverse(point as any, tempPoint);\r\n\r\n\t\t\tconst vertices = this.vertices;\r\n\t\t\tconst points = tempPolygon.points;\r\n\t\t\tconst indices = this.indices;\r\n\t\t\tconst len = this.indices.length;\r\n\t\t\tconst step = this.drawMode === Mesh.DRAW_MODES.TRIANGLES ? 3 : 1;\r\n\r\n\t\t\tfor (let i = 0; i + 2 < len; i += step) {\r\n\t\t\t\tconst ind0 = indices[i] * 2;\r\n\t\t\t\tconst ind1 = indices[i + 1] * 2;\r\n\t\t\t\tconst ind2 = indices[i + 2] * 2;\r\n\r\n\t\t\t\tpoints[0] = vertices[ind0];\r\n\t\t\t\tpoints[1] = vertices[ind0 + 1];\r\n\t\t\t\tpoints[2] = vertices[ind1];\r\n\t\t\t\tpoints[3] = vertices[ind1 + 1];\r\n\t\t\t\tpoints[4] = vertices[ind2];\r\n\t\t\t\tpoints[5] = vertices[ind2 + 1];\r\n\r\n\t\t\t\tif (tempPolygon.contains(tempPoint.x, tempPoint.y)) {\r\n\t\t\t\t\treturn true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tcalculateVertices() {\r\n\t\t\tconst vertices = this.vertices;\r\n\t\t\tconst n = vertices.length;\r\n\r\n\t\t\tif (!this.vertexData || this.vertexData.length !== n)\r\n\t\t\t{\r\n\t\t\t\tthis.vertexData = new Float32Array(n);\r\n\t\t\t}\r\n\r\n\t\t\tconst vertexData = this.vertexData;\r\n\r\n\t\t\tconst matrix = this.transform.worldTransform;\r\n\t\t\tconst a = matrix.a;\r\n\t\t\tconst b = matrix.b;\r\n\t\t\tconst c = matrix.c;\r\n\t\t\tconst d = matrix.d;\r\n\t\t\tconst tx = matrix.tx;\r\n\t\t\tconst ty = matrix.ty;\r\n\r\n\t\t\tfor (let i = 0; i < n; i += 2)\r\n\t\t\t{\r\n\t\t\t\tconst rawX = vertices[i];\r\n\t\t\t\tconst rawY = vertices[i + 1];\r\n\t\t\t\tvertexData[i] = (a * rawX) + (c * rawY) + tx;\r\n\t\t\t\tvertexData[i+1] = (d * rawY) + (b * rawX) + ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateMaskVertices() {\r\n\t\t\t// actual implementation is in Sprite class\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The texture that the mesh uses.\r\n\t\t *\r\n\t\t * @member {PIXI.Texture}\r\n\t\t */\r\n\t\tget texture() {\r\n\t\t\treturn this._texture;\r\n\t\t}\r\n\r\n\t\tset texture(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._texture === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._texture = value;\r\n\r\n\t\t\tif (value) {\r\n\t\t\t\t// wait for the texture to load\r\n\t\t\t\tif (value.baseTexture.hasLoaded) {\r\n\t\t\t\t\tthis._onTextureUpdate();\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tvalue.once('update', this._onTextureUpdate, this);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tenableColors() {\r\n\t\t\tthis.pluginName = 'meshColored';\r\n\r\n\t\t\tconst len = this.vertices.length / 2;\r\n\t\t\tconst colors = new Uint32Array(len * 2);\r\n\r\n\t\t\tthis.colors = colors;\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tthis.colors[i * 2] = 0;\r\n\t\t\t\tthis.colors[i * 2 + 1] = 0xffffffff;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * @param {Float32Array} rgb 3 * len numbers, RGB colors of mesh\r\n\t\t * @param {boolean} dark whether its dark or light tint\r\n\t\t */\r\n\t\tsetRGB(rgb: Float32Array, dark: boolean) {\r\n\t\t\tconst colors = this.colors;\r\n\r\n\t\t\tlet j = dark ? 0 : 1;\r\n\t\t\tlet a = dark ? 0 : (0xff << 24);\r\n\t\t\tfor (let i = 0; i < rgb.length; i += 3) {\r\n\t\t\t\tcolors[j] = a | ((rgb[i] * 255) << 16) | ((rgb[i+1] * 255) << 8) | ((rgb[i+2] * 255) << 0);\r\n\t\t\t\tj+=2;\r\n\t\t\t}\r\n\r\n\t\t\tthis.dirty++;\r\n\t\t}\r\n\r\n\t\tcolor = new ColorTransform();\r\n\r\n\t\t/**\r\n\t\t * The tint applied to the mesh. This is a hex value. A value of 0xFFFFFF will remove any tint effect.\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @default 0xFFFFFF\r\n\t\t */\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\tstatic DRAW_MODES = PIXI.mesh.Mesh.DRAW_MODES;\r\n\r\n\t\tdestroy(options?: PIXI.DestroyOptions | boolean) {\r\n\t\t\tif (this.animState) {\r\n\t\t\t\tthis.animState.stop();\r\n\t\t\t\tthis.animState = null;\r\n\t\t\t}\r\n\r\n\t\t\tfor (const id in this._glDatas)\r\n\t\t\t{\r\n\t\t\t\tconst data = this._glDatas[id];\r\n\r\n\t\t\t\tif (data.destroy)\r\n\t\t\t\t{\r\n\t\t\t\t\tdata.destroy();\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tif (data.vertexBuffer)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.vertexBuffer.destroy();\r\n\t\t\t\t\t\tdata.vertexBuffer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data.indexBuffer)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.indexBuffer.destroy();\r\n\t\t\t\t\t\tdata.indexBuffer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data.colorBuffer)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.colorBuffer.destroy();\r\n\t\t\t\t\t\tdata.colorBuffer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data.uvBuffer)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.uvBuffer.destroy();\r\n\t\t\t\t\t\tdata.uvBuffer = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (data.vao)\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tdata.vao.destroy();\r\n\t\t\t\t\t\tdata.vao = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tthis._glDatas = null;\r\n\r\n\t\t\tsuper.destroy(options);\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\timport GroupD8 = PIXI.GroupD8;\r\n\r\n\t/**\r\n\t * The Plane allows you to draw a texture across several points and them manipulate these points\r\n\t *\r\n\t *```js\r\n\t * for (let i = 0; i < 20; i++) {\r\n *     points.push(new PIXI.Point(i * 50, 0));\r\n * };\r\n\t * let Plane = new PIXI.Plane(PIXI.Texture.fromImage(\"snake.png\"), points);\r\n\t *  ```\r\n\t *\r\n\t * @class\r\n\t * @extends PIXI.mesh.Mesh\r\n\t * @memberof PIXI.mesh\r\n\t *\r\n\t */\r\n\texport class Plane extends Mesh {\r\n\t\t_verticesX: number;\r\n\t\t_verticesY: number;\r\n\t\t_direction: number;\r\n\t\t_lastWidth: number;\r\n\t\t_lastHeight: number;\r\n\t\t_width: number;\r\n\t\t_height: number;\r\n\r\n\t\t/**\r\n\t\t *  Version counter for verticesX/verticesY change\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\t_dimensionsID = 0;\r\n\r\n\t\t_lastDimensionsID = -1;\r\n\r\n\t\t/**\r\n\t\t *  Version counter for vertices updates\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\t_verticesID = 0;\r\n\r\n\t\t_lastVerticesID = -1;\r\n\r\n\t\t/**\r\n\t\t *  Version counter for uvs updates\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @private\r\n\t\t */\r\n\t\t_uvsID = 0;\r\n\r\n\t\t_lastUvsID = -1;\r\n\r\n\t\t_anchor: PIXI.ObservablePoint;\r\n\r\n\t\t/**\r\n\t\t * reset the points on dimensions change\r\n\t\t * @member {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tautoResetVertices = true;\r\n\r\n\t\tcalculatedVertices: Float32Array = null;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.Texture} texture - The texture to use on the Plane.\r\n\t\t * @param {number} [verticesX=2] - The number of vertices in the x-axis\r\n\t\t * @param {number} [verticesY=2] - The number of vertices in the y-axis\r\n\t\t * @param {number} [direction=0] - Direction of the mesh. See {@link PIXI.GroupD8} for explanation\r\n\t\t */\r\n\t\tconstructor(texture: PIXI.Texture, verticesX: number = 2, verticesY: number = 2, direction = 0) {\r\n\t\t\tsuper(texture);\r\n\r\n\t\t\tthis._verticesX = verticesX || 2;\r\n\t\t\tthis._verticesY = verticesY || 2;\r\n\r\n\t\t\tthis._direction = (direction || 0) & (~1);\r\n\r\n\t\t\tthis._lastWidth = this._texture.orig.width;\r\n\t\t\tthis._lastHeight = this._texture.orig.height;\r\n\r\n\t\t\tthis._width = 0;\r\n\t\t\tthis._height = 0;\r\n\r\n\t\t\t/**\r\n\t\t\t * anchor for a plane\r\n\t\t\t *\r\n\t\t\t * @member {PIXI.ObservablePoint}\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis._anchor = new PIXI.ObservablePoint(this._onAnchorUpdate, this);\r\n\r\n\t\t\tthis.drawMode = Mesh.DRAW_MODES.TRIANGLES;\r\n\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The width of the sprite, setting this will actually modify the scale to achieve the value set\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget verticesX() {\r\n\t\t\treturn this._verticesX;\r\n\t\t}\r\n\r\n\t\tset verticesX(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._verticesX === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._verticesX = value;\r\n\t\t\tthis._dimensionsID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The height of the TilingSprite, setting this will actually modify the scale to achieve the value set\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget verticesY() {\r\n\t\t\treturn this._verticesY;\r\n\t\t}\r\n\r\n\t\tset verticesY(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._verticesY === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._verticesY = value;\r\n\t\t\tthis._dimensionsID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Direction of the mesh, see {@link PIXI.GroupD8} for explanation\r\n\t\t *\r\n\t\t * @param {number} [direction=0] - Direction of the mesh.\r\n\t\t */\r\n\t\tget direction() {\r\n\t\t\treturn this._direction;\r\n\t\t}\r\n\r\n\t\tset direction(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (value % 2 !== 0) {\r\n\t\t\t\tthrow new Error('plane does not support diamond shape yet');\r\n\t\t\t}\r\n\r\n\t\t\tif (this._direction === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._direction = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The width of the Plane, settings this wont modify the scale, but vertices will be cleared\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget width() {\r\n\t\t\treturn this._width || this.texture.orig.width;\r\n\t\t}\r\n\r\n\t\tset width(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._width === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._width = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The height of the Plane, settings this wont modify the scale, but vertices will be cleared\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget height() {\r\n\t\t\treturn this._height || this.texture.orig.height;\r\n\t\t}\r\n\r\n\t\tset height(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._height === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._height = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The anchor sets the origin point of the texture.\r\n\t\t * The default is 0,0 this means the texture's origin is the top left\r\n\t\t * Setting the anchor to 0.5,0.5 means the texture's origin is centered\r\n\t\t * Setting the anchor to 1,1 would mean the texture's origin point will be the bottom right corner\r\n\t\t *\r\n\t\t * @member {PIXI.ObservablePoint}\r\n\t\t */\r\n\t\tget anchor() {\r\n\t\t\treturn this._anchor;\r\n\t\t}\r\n\r\n\t\tset anchor(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tthis._anchor.copy(value);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * updates vertices after anchor changes\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onAnchorUpdate() {\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Call when you updated some parameters manually\r\n\t\t */\r\n\t\tinvalidateVertices() {\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Call when you updated some parameters manually\r\n\t\t */\r\n\t\tinvalidateUvs() {\r\n\t\t\tthis._uvsID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Call when you updated some parameters manually\r\n\t\t */\r\n\t\tinvalidate() {\r\n\t\t\tthis._verticesID++;\r\n\t\t\tthis._uvsID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes the plane mesh\r\n\t\t *\r\n\t\t * @param {boolean} [forceUpdate=false] if true, everything will be updated in any case\r\n\t\t */\r\n\t\trefresh(forceUpdate = false) {\r\n\t\t\tthis.refreshDimensions(forceUpdate);\r\n\r\n\t\t\tif (this._texture.noFrame) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._lastWidth !== this.width\r\n\t\t\t\t|| this._lastHeight !== this.height) {\r\n\t\t\t\tthis._lastWidth = this.width;\r\n\t\t\t\tthis._lastHeight = this.height;\r\n\t\t\t\tif (this.autoResetVertices) {\r\n\t\t\t\t\tthis._verticesID++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvTransform.update(forceUpdate)) {\r\n\t\t\t\tthis._uvsID++;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._uvsID !== this._lastUvsID) {\r\n\t\t\t\tthis._refreshUvs();\r\n\t\t\t}\r\n\r\n\t\t\tthis.refreshVertices();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes structure of the plane mesh\r\n\t\t * when its done, refreshes vertices and uvs too\r\n\t\t *\r\n\t\t * @param {boolean} [forceUpdate=false] if true, dimensions will be updated any case\r\n\t\t */\r\n\t\trefreshDimensions(forceUpdate = false) {\r\n\t\t\t// won't be overwritten, that's why there's no private method\r\n\r\n\t\t\tif (!forceUpdate && this._lastDimensionsID === this._dimensionsID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._lastDimensionsID = this._dimensionsID;\r\n\t\t\tthis._verticesID++;\r\n\t\t\tthis._uvsID++;\r\n\r\n\t\t\tconst total = this._verticesX * this._verticesY;\r\n\r\n\t\t\tconst segmentsX = this._verticesX - 1;\r\n\t\t\tconst segmentsY = this._verticesY - 1;\r\n\r\n\t\t\tconst indices = [];\r\n\t\t\tconst totalSub = segmentsX * segmentsY;\r\n\r\n\t\t\tfor (let i = 0; i < totalSub; i++) {\r\n\t\t\t\tconst xpos = i % segmentsX;\r\n\t\t\t\tconst ypos = (i / segmentsX) | 0;\r\n\r\n\t\t\t\tconst value = (ypos * this._verticesX) + xpos;\r\n\t\t\t\tconst value2 = (ypos * this._verticesX) + xpos + 1;\r\n\t\t\t\tconst value3 = ((ypos + 1) * this._verticesX) + xpos;\r\n\t\t\t\tconst value4 = ((ypos + 1) * this._verticesX) + xpos + 1;\r\n\r\n\t\t\t\tindices.push(value, value2, value3);\r\n\t\t\t\tindices.push(value2, value4, value3);\r\n\t\t\t}\r\n\t\t\tthis.indices = new Uint16Array(indices);\r\n\t\t\tthis.uvs = new Float32Array(total * 2);\r\n\t\t\tthis.vertices = new Float32Array(total * 2);\r\n\t\t\tthis.calculatedVertices = new Float32Array(total * 2);\r\n\r\n\t\t\tthis.indexDirty++;\r\n\t\t\tif (this.colors) {\r\n\t\t\t\tthis.colors = new Uint32Array(total * 2);\r\n\t\t\t\tfor (let i = 0; i < total; i++) {\r\n\t\t\t\t\tthis.colors[i * 2] = 0;\r\n\t\t\t\t\tthis.colors[i * 2 + 1] = 0xffffffff;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes plane vertices coords\r\n\t\t * by default, makes them uniformly distributed\r\n\t\t *\r\n\t\t * @param {boolean} [forceUpdate=false] if true, vertices will be updated any case\r\n\t\t */\r\n\t\trefreshVertices(forceUpdate = false) {\r\n\t\t\tconst texture = this._texture;\r\n\r\n\t\t\tif (texture.noFrame) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (forceUpdate || this._lastVerticesID !== this._verticesID) {\r\n\t\t\t\tthis._lastVerticesID = this._verticesID;\r\n\t\t\t\tthis._refreshVertices();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes plane UV coordinates\r\n\t\t *\r\n\t\t */\r\n\t\t_refreshUvs() {\r\n\t\t\tthis._uvsID = this._lastUvsID;\r\n\r\n\t\t\tconst total = this._verticesX * this._verticesY;\r\n\t\t\tconst uvs = this.uvs;\r\n\r\n\t\t\tconst direction = this._direction;\r\n\r\n\t\t\tconst ux = GroupD8.uX(direction);\r\n\t\t\tconst uy = GroupD8.uY(direction);\r\n\t\t\tconst vx = GroupD8.vX(direction);\r\n\t\t\tconst vy = GroupD8.vY(direction);\r\n\r\n\t\t\tconst factorU = 1.0 / (this._verticesX - 1);\r\n\t\t\tconst factorV = 1.0 / (this._verticesY - 1);\r\n\r\n\t\t\tfor (let i = 0; i < total; i++) {\r\n\t\t\t\tlet x = (i % this._verticesX);\r\n\t\t\t\tlet y = ((i / this._verticesX) | 0);\r\n\r\n\t\t\t\tx = (x * factorU) - 0.5;\r\n\t\t\t\ty = (y * factorV) - 0.5;\r\n\r\n\t\t\t\tuvs[i * 2] = (ux * x) + (vx * y) + 0.5;\r\n\t\t\t\tuvs[(i * 2) + 1] = (uy * x) + (vy * y) + 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tthis.dirty++;\r\n\r\n\t\t\tthis.multiplyUvs();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * calculates supposed position of vertices\r\n\t\t */\r\n\t\tcalcVertices() {\r\n\t\t\tconst total = this._verticesX * this._verticesY;\r\n\t\t\tconst vertices = this.calculatedVertices;\r\n\r\n\t\t\tconst width = this.width;\r\n\t\t\tconst height = this.height;\r\n\t\t\tconst direction = this._direction;\r\n\r\n\t\t\tlet ux = GroupD8.uX(direction);\r\n\t\t\tlet uy = GroupD8.uY(direction);\r\n\t\t\tlet vx = GroupD8.vX(direction);\r\n\t\t\tlet vy = GroupD8.vY(direction);\r\n\r\n\t\t\tconst anchor = this._anchor as any;\r\n\t\t\tconst offsetX = (0.5 * (1 - (ux + vx))) - anchor._x;\r\n\t\t\tconst offsetY = (0.5 * (1 - (uy + vy))) - anchor._y;\r\n\t\t\tconst factorU = 1.0 / (this._verticesX - 1);\r\n\t\t\tconst factorV = 1.0 / (this._verticesY - 1);\r\n\r\n\t\t\tux *= factorU;\r\n\t\t\tuy *= factorU;\r\n\t\t\tvx *= factorV;\r\n\t\t\tvy *= factorV;\r\n\r\n\t\t\tfor (let i = 0; i < total; i++) {\r\n\t\t\t\tconst x = (i % this._verticesX);\r\n\t\t\t\tconst y = ((i / this._verticesX) | 0);\r\n\r\n\t\t\t\tvertices[i * 2] = ((ux * x) + (vx * y) + offsetX) * width;\r\n\t\t\t\tvertices[(i * 2) + 1] = ((uy * x) + (vy * y) + offsetY) * height;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * calculates colors (if enabled)\r\n\t\t */\r\n\t\tcalcColors() {\r\n\t\t\t/* nothing */\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes vertices of Plane mesh\r\n\t\t * by default, makes them uniformly distributed\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_refreshVertices() {\r\n\t\t\tthis.calcVertices();\r\n\r\n\t\t\tconst vertices = this.vertices;\r\n\t\t\tconst calculatedVertices = this.calculatedVertices;\r\n\t\t\tconst len = vertices.length;\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tvertices[i] = calculatedVertices[i];\r\n\t\t\t}\r\n\r\n\t\t\tif (this.colors) {\r\n\t\t\t\tthis.calcColors();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * resets everything to defaults\r\n\t\t */\r\n\t\treset() {\r\n\t\t\tif (!this.texture.noFrame) {\r\n\t\t\t\tthis._refreshUvs();\r\n\t\t\t\tthis.refreshVertices(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\r\n\tconst DEFAULT_BORDER_SIZE = 10;\r\n\r\n\t/**\r\n\t * The NineSlicePlane allows you to stretch a texture using 9-slice scaling. The corners will remain unscaled (useful\r\n\t * for buttons with rounded corners for example) and the other areas will be scaled horizontally and or vertically\r\n\t *\r\n\t *```js\r\n\t * let Plane9 = new PIXI.NineSlicePlane(PIXI.Texture.fromImage('BoxWithRoundedCorners.png'), 15, 15, 15, 15);\r\n\t *  ```\r\n\t * <pre>\r\n\t *      A                          B\r\n\t *    +---+----------------------+---+\r\n\t *  C | 1 |          2           | 3 |\r\n\t *    +---+----------------------+---+\r\n\t *    |   |                      |   |\r\n\t *    | 4 |          5           | 6 |\r\n\t *    |   |                      |   |\r\n\t *    +---+----------------------+---+\r\n\t *  D | 7 |          8           | 9 |\r\n\t *    +---+----------------------+---+\r\n\r\n\t *  When changing this objects width and/or height:\r\n\t *     areas 1 3 7 and 9 will remain unscaled.\r\n\t *     areas 2 and 8 will be stretched horizontally\r\n\t *     areas 4 and 6 will be stretched vertically\r\n\t *     area 5 will be stretched both horizontally and vertically\r\n\t * </pre>\r\n\t *\r\n\t * @class\r\n\t * @extends PIXI.mesh.Plane\r\n\t * @memberof PIXI.mesh\r\n\t *\r\n\t */\r\n\texport class NineSlicePlane extends Plane {\r\n\t\t/**\r\n\t\t * The width of the left column (a)\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t * @override\r\n\t\t */\r\n\t\t_leftWidth: number;\r\n\r\n\t\t/**\r\n\t\t * The width of the right column (b)\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t * @override\r\n\t\t */\r\n\t\t_rightWidth: number;\r\n\r\n\t\t/**\r\n\t\t * The height of the top row (c)\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t * @override\r\n\t\t */\r\n\t\t_topHeight: number;\r\n\r\n\t\t/**\r\n\t\t * The height of the bottom row (d)\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t * @override\r\n\t\t */\r\n\t\t_bottomHeight: number;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.Texture} texture - The texture to use on the NineSlicePlane.\r\n\t\t * @param {int} [leftWidth=10] size of the left vertical bar (A)\r\n\t\t * @param {int} [topHeight=10] size of the top horizontal bar (C)\r\n\t\t * @param {int} [rightWidth=10] size of the right vertical bar (B)\r\n\t\t * @param {int} [bottomHeight=10] size of the bottom horizontal bar (D)\r\n\t\t */\r\n\t\tconstructor(texture: PIXI.Texture, leftWidth = DEFAULT_BORDER_SIZE, topHeight = DEFAULT_BORDER_SIZE,\r\n\t\t            rightWidth = DEFAULT_BORDER_SIZE, bottomHeight = DEFAULT_BORDER_SIZE) {\r\n\t\t\tsuper(texture, 4, 4);\r\n\r\n\r\n\t\t\tthis._leftWidth = leftWidth;\r\n\r\n\t\t\t/**\r\n\t\t\t * The width of the right column (b)\r\n\t\t\t *\r\n\t\t\t * @member {number}\r\n\t\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tthis._rightWidth = rightWidth;\r\n\r\n\t\t\t/**\r\n\t\t\t * The height of the top row (c)\r\n\t\t\t *\r\n\t\t\t * @member {number}\r\n\t\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tthis._topHeight = topHeight;\r\n\r\n\t\t\t/**\r\n\t\t\t * The height of the bottom row (d)\r\n\t\t\t *\r\n\t\t\t * @member {number}\r\n\t\t\t * @memberof PIXI.NineSlicePlane#\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tthis._bottomHeight = bottomHeight;\r\n\r\n\t\t\tthis.refresh(true);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The width of the left column\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget leftWidth() {\r\n\t\t\treturn this._leftWidth;\r\n\t\t}\r\n\r\n\t\tset leftWidth(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._leftWidth === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._leftWidth = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The width of the right column\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget rightWidth() {\r\n\t\t\treturn this._rightWidth;\r\n\t\t}\r\n\r\n\t\tset rightWidth(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._rightWidth === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._rightWidth = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The height of the top row\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget topHeight() {\r\n\t\t\treturn this._topHeight;\r\n\t\t}\r\n\r\n\t\tset topHeight(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._topHeight === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._topHeight = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * The height of the bottom row\r\n\t\t *\r\n\t\t * @member {number}\r\n\t\t */\r\n\t\tget bottomHeight() {\r\n\t\t\treturn this._bottomHeight;\r\n\t\t}\r\n\r\n\t\tset bottomHeight(value) // eslint-disable-line require-jsdoc\r\n\t\t{\r\n\t\t\tif (this._bottomHeight === value) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis._bottomHeight = value;\r\n\t\t\tthis._verticesID++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * refreshes both vertices and uvs\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_refreshVertices() {\r\n\t\t\tthis.updateHorizontalVertices();\r\n\t\t\tthis.updateVerticalVertices();\r\n\r\n\t\t\tconst vertices = this.vertices;\r\n\t\t\tconst anchor = this._anchor as any;\r\n\t\t\tconst offsetX = anchor._x * this.width;\r\n\t\t\tconst offsetY = anchor._y * this.height;\r\n\r\n\t\t\tfor (let i = 0; i < 32; i += 2) {\r\n\t\t\t\tvertices[i] += offsetX;\r\n\t\t\t\tvertices[i + 1] += offsetY;\r\n\t\t\t}\r\n\t\t\tthis.dirty++;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * does nothing\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_refreshUvs() {\r\n\t\t\tthis._uvsID = this._lastUvsID;\r\n\r\n\t\t\tconst uvs = this.uvs;\r\n\t\t\tconst texture = this._texture;\r\n\t\t\tconst width = texture.orig.width;\r\n\t\t\tconst height = texture.orig.height;\r\n\r\n\t\t\tuvs[0] = uvs[8] = uvs[16] = uvs[24] = 0;\r\n\t\t\tuvs[2] = uvs[10] = uvs[18] = uvs[26] = this._leftWidth / width;\r\n\t\t\tuvs[4] = uvs[12] = uvs[20] = uvs[28] = 1 - (this._rightWidth / width);\r\n\t\t\tuvs[6] = uvs[14] = uvs[22] = uvs[30] = 1;\r\n\r\n\t\t\tuvs[1] = uvs[3] = uvs[5] = uvs[7] = 0;\r\n\t\t\tuvs[9] = uvs[11] = uvs[13] = uvs[15] = this._topHeight / height;\r\n\t\t\tuvs[17] = uvs[19] = uvs[21] = uvs[23] = 1 - (this._bottomHeight / height);\r\n\t\t\tuvs[25] = uvs[27] = uvs[29] = uvs[31] = 1;\r\n\r\n\t\t\tthis.dirty++;\r\n\r\n\t\t\tthis.multiplyUvs();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the horizontal vertices.\r\n\t\t */\r\n\t\tupdateHorizontalVertices() {\r\n\t\t\tconst vertices = this.vertices;\r\n\r\n\t\t\tvertices[1] = vertices[3] = vertices[5] = vertices[7] = 0;\r\n\t\t\tvertices[9] = vertices[11] = vertices[13] = vertices[15] = this._topHeight;\r\n\t\t\tvertices[17] = vertices[19] = vertices[21] = vertices[23] = this._height - this._bottomHeight;\r\n\t\t\tvertices[25] = vertices[27] = vertices[29] = vertices[31] = this._height;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the vertical vertices.\r\n\t\t *\r\n\t\t */\r\n\t\tupdateVerticalVertices() {\r\n\t\t\tconst vertices = this.vertices;\r\n\r\n\t\t\tvertices[0] = vertices[8] = vertices[16] = vertices[24] = 0;\r\n\t\t\tvertices[2] = vertices[10] = vertices[18] = vertices[26] = this._leftWidth;\r\n\t\t\tvertices[4] = vertices[12] = vertices[20] = vertices[28] = this._width - this._rightWidth;\r\n\t\t\tvertices[6] = vertices[14] = vertices[22] = vertices[30] = this._width;\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders the object using the Canvas renderer\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {PIXI.CanvasRenderer} renderer - The canvas renderer to render with.\r\n\t\t */\r\n\t\t_renderCanvas(renderer: PIXI.CanvasRenderer) {\r\n\t\t\t// no texture - no drawImage\r\n\t\t\tif (!this._texture.valid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\t// advanced rendering - allow texture rotates\r\n\t\t\tif (this._texture.rotate) {\r\n\t\t\t\tsuper._renderCanvas(renderer);\r\n\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst context = renderer.context;\r\n\r\n\t\t\tcontext.globalAlpha = this.worldAlpha;\r\n\r\n\t\t\tconst transform = this.worldTransform;\r\n\t\t\tconst res = renderer.resolution;\r\n\r\n\t\t\tif (renderer.roundPixels) {\r\n\t\t\t\tcontext.setTransform(\r\n\t\t\t\t\ttransform.a * res,\r\n\t\t\t\t\ttransform.b * res,\r\n\t\t\t\t\ttransform.c * res,\r\n\t\t\t\t\ttransform.d * res,\r\n\t\t\t\t\t(transform.tx * res) | 0,\r\n\t\t\t\t\t(transform.ty * res) | 0\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tcontext.setTransform(\r\n\t\t\t\t\ttransform.a * res,\r\n\t\t\t\t\ttransform.b * res,\r\n\t\t\t\t\ttransform.c * res,\r\n\t\t\t\t\ttransform.d * res,\r\n\t\t\t\t\ttransform.tx * res,\r\n\t\t\t\t\ttransform.ty * res\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tconst base = this._texture.baseTexture;\r\n\t\t\tconst textureSource = base.source;\r\n\t\t\tconst w = base.realWidth;\r\n\t\t\tconst h = base.realHeight;\r\n\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 0, 1, 10, 11);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 2, 3, 12, 13);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 4, 5, 14, 15);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 8, 9, 18, 19);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 10, 11, 20, 21);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 12, 13, 22, 23);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 16, 17, 26, 27);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 18, 19, 28, 29);\r\n\t\t\tthis.drawSegment(context, textureSource, w, h, 20, 21, 30, 31);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Renders one segment of the plane.\r\n\t\t * to mimic the exact drawing behavior of stretching the image like WebGL does, we need to make sure\r\n\t\t * that the source area is at least 1 pixel in size, otherwise nothing gets drawn when a slice size of 0 is used.\r\n\t\t *\r\n\t\t * @private\r\n\t\t * @param {CanvasRenderingContext2D} context - The context to draw with.\r\n\t\t * @param {CanvasImageSource} textureSource - The source to draw.\r\n\t\t * @param {number} w - width of the texture\r\n\t\t * @param {number} h - height of the texture\r\n\t\t * @param {number} x1 - x index 1\r\n\t\t * @param {number} y1 - y index 1\r\n\t\t * @param {number} x2 - x index 2\r\n\t\t * @param {number} y2 - y index 2\r\n\t\t */\r\n\t\tdrawSegment(context: CanvasRenderingContext2D, textureSource: HTMLImageElement | HTMLCanvasElement | HTMLVideoElement,\r\n\t\t            w: number, h: number, x1: number, y1: number, x2: number, y2: number) {\r\n\t\t\t// otherwise you get weird results when using slices of that are 0 wide or high.\r\n\t\t\tconst uvs = this.uvs;\r\n\t\t\tconst vertices = this.vertices;\r\n\r\n\t\t\tlet sw = (uvs[x2] - uvs[x1]) * w;\r\n\t\t\tlet sh = (uvs[y2] - uvs[y1]) * h;\r\n\t\t\tlet dw = vertices[x2] - vertices[x1];\r\n\t\t\tlet dh = vertices[y2] - vertices[y1];\r\n\r\n\t\t\t// make sure the source is at least 1 pixel wide and high, otherwise nothing will be drawn.\r\n\t\t\tif (sw < 1) {\r\n\t\t\t\tsw = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (sh < 1) {\r\n\t\t\t\tsh = 1;\r\n\t\t\t}\r\n\r\n\t\t\t// make sure destination is at least 1 pixel wide and high, otherwise you get\r\n\t\t\t// lines when rendering close to original size.\r\n\t\t\tif (dw < 1) {\r\n\t\t\t\tdw = 1;\r\n\t\t\t}\r\n\r\n\t\t\tif (dh < 1) {\r\n\t\t\t\tdh = 1;\r\n\t\t\t}\r\n\r\n\t\t\tcontext.drawImage(textureSource, uvs[x1] * w, uvs[y1] * h, sw, sh, vertices[x1], vertices[y1], dw, dh);\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\timport GroupD8 = PIXI.GroupD8;\r\n\r\n\t/**\r\n\t * The rope sprite allows you to hack a rope that behaves like a sprite\r\n\t *\r\n\t * ```\r\n\t * let rope = new PIXI.mesh.Rope(PIXI.Texture.fromImage(\"snake.png\"), 5, 2, vertical ? 2 : 0);\r\n\t * rope.anchor.set(0.5, 0.5);\r\n\t * rope.clearPoints(); // set them according to anchor\r\n\t * rope.points[1].y = 15; // middle Y goes down\r\n\t * rope.points[2].offset = 15; // shift is better\r\n\t * rope.points[3].scale = 1.2; // scale a bit\r\n\t * ```\r\n\t *\r\n\t * @class\r\n\t * @extends PIXI.mesh.Rope\r\n\t * @memberof PIXI.mesh\r\n\t *\r\n\t */\r\n\texport class Rope extends Plane {\r\n\r\n\t\tpoints: Array<RopePoint> = [];\r\n\t\tcalculatedPoints: Array<RopePoint> = [];\r\n\r\n\t\t/**\r\n\t\t * invalidates points on every updateTransform\r\n\t\t * @member {boolean}\r\n\t\t * @default true\r\n\t\t */\r\n\t\tautoUpdate = true;\r\n\r\n\t\t/**\r\n\t\t * @param {PIXI.Texture} texture - The texture to use on the rope.\r\n\t\t * @param {number|PIXI.mesh.RopePoint[]} [verticesX=2] - How many vertices on diameter of the rope,\r\n\t\t * you can also pass pre-created points here.\r\n\t\t * @param {number} [verticesY=2] - How many vertices on meridian of the rope, make it 2 or 3\r\n\t\t * @param {number} [direction=0] - Direction of the rope. See {@link PIXI.GroupD8} for explanation\r\n\t\t */\r\n\t\tconstructor(texture: PIXI.Texture, verticesX: Array<RopePoint> | number, verticesY: number = 2, direction = 0) {\r\n\t\t\tsuper(texture, (verticesX as any).length || verticesX, verticesY, direction);\r\n\r\n\t\t\t/*\r\n\t\t\t * @member {PIXI.mesh.RopePoint[]} An array of points that determine the rope\r\n\t\t\t */\r\n\t\t\tthis.points = [];\r\n\t\t\t/*\r\n\t\t\t * @member {PIXI.mesh.RopePoint[]} Generated points positions, useful as starting position for points\r\n\t\t\t */\r\n\t\t\tthis.calculatedPoints = [];\r\n\r\n\t\t\tif (verticesX instanceof Array) {\r\n\t\t\t\tthis.points = verticesX;\r\n\t\t\t\tthis.autoResetVertices = false;\r\n\t\t\t}\r\n\r\n\t\t\tthis._checkPointsLen();\r\n\r\n\t\t\tif ((GroupD8 as any).isVertical(direction)) {\r\n\t\t\t\t(this._anchor as any)._x = 0.5;\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\t(this._anchor as any)._y = 0.5;\r\n\t\t\t}\r\n\r\n\t\t\tthis.refresh();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Updates the object transform for rendering\r\n\t\t */\r\n\t\tupdateTransform() {\r\n\t\t\tif (this.autoUpdate) {\r\n\t\t\t\tthis._verticesID++;\r\n\t\t\t}\r\n\t\t\tthis.refresh();\r\n\t\t\tthis.containerUpdateTransform();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * updates everything when anchor was changed\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\t_onAnchorUpdate() {\r\n\t\t\tthis.reset();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * sets default points coordinates\r\n\t\t *\r\n\t\t */\r\n\t\t_checkPointsLen() {\r\n\t\t\tconst len = this._verticesX;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst calculatedPoints = this.calculatedPoints;\r\n\r\n\t\t\tif (points.length > len) {\r\n\t\t\t\tpoints.length = len;\r\n\t\t\t}\r\n\r\n\t\t\twhile (points.length < len) {\r\n\t\t\t\tpoints.push(new RopePoint(0, 0, 0, 1.0));\r\n\t\t\t}\r\n\r\n\t\t\tif (calculatedPoints.length > len) {\r\n\t\t\t\tcalculatedPoints.length = len;\r\n\t\t\t}\r\n\r\n\t\t\twhile (calculatedPoints.length < len) {\r\n\t\t\t\tcalculatedPoints.push(new RopePoint(0, 0, 0, 1.0));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes the rope sprite mesh\r\n\t\t *\r\n\t\t * @param {boolean} [forceUpdate=false] if true, everything will be updated in any case\r\n\t\t */\r\n\t\trefresh(forceUpdate = false) {\r\n\t\t\t// using \"this.points\" instead of old \"ready\" hack\r\n\r\n\t\t\tif (!this.points || this._texture.noFrame) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._lastWidth !== this.width\r\n\t\t\t\t|| this._lastHeight !== this.height) {\r\n\t\t\t\tthis._lastWidth = this.width;\r\n\t\t\t\tthis._lastHeight = this.height;\r\n\t\t\t\tif (this.autoResetVertices) {\r\n\t\t\t\t\tthis.resetPoints();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tsuper.refresh(forceUpdate);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Calculate default position for points\r\n\t\t */\r\n\t\tcalcPoints() {\r\n\t\t\tconst len = this._verticesX;\r\n\t\t\tconst points = this.calculatedPoints;\r\n\r\n\t\t\tconst dir = this._direction;\r\n\r\n\t\t\tconst width = this.width;\r\n\t\t\tconst height = this.height;\r\n\r\n\t\t\tconst dx = GroupD8.uX(dir);\r\n\t\t\tconst dy = GroupD8.uY(dir);\r\n\r\n\t\t\tconst anchor = this._anchor as any;\r\n\t\t\tconst offsetX = dx !== 0 ? 0.5 - anchor._x : 0;\r\n\t\t\tconst offsetY = dy !== 0 ? 0.5 - anchor._y : 0;\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tconst t = (i - ((len - 1) * 0.5)) / (len - 1);\r\n\r\n\t\t\t\tpoints[i].x = ((t * dx) + offsetX) * width;\r\n\t\t\t\tpoints[i].y = ((t * dy) + offsetY) * height;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * sets default points coordinates\r\n\t\t */\r\n\t\tresetPoints() {\r\n\t\t\tthis.calcPoints();\r\n\r\n\t\t\tconst len = this._verticesX;\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst calculatedPoints = this.calculatedPoints;\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tpoints[i].x = calculatedPoints[i].x;\r\n\t\t\t\tpoints[i].y = calculatedPoints[i].y;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * sets default shift - zero\r\n\t\t */\r\n\t\tresetOffsets() {\r\n\t\t\tconst points = this.points;\r\n\t\t\tconst len = points.length;\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tpoints[i].offset = 0.0;\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0; i < len; i++) {\r\n\t\t\t\tpoints[i].scale = 1.0;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * clears rope points\r\n\t\t */\r\n\t\treset() {\r\n\t\t\tthis._checkPointsLen();\r\n\t\t\tthis.resetPoints();\r\n\t\t\tthis.resetOffsets();\r\n\r\n\t\t\tsuper.reset();\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Refreshes vertices of Rope mesh\r\n\t\t */\r\n\t\tcalcVertices() {\r\n\t\t\tconst points = this.points;\r\n\r\n\t\t\tlet lastPoint = points[0];\r\n\t\t\tlet nextPoint;\r\n\t\t\tlet normalX = 0;\r\n\t\t\tlet normalY = 0;\r\n\r\n\t\t\tconst width = this.width;\r\n\t\t\tconst height = this.height;\r\n\t\t\tconst vertices = this.calculatedVertices;\r\n\t\t\tconst verticesX = this.verticesX;\r\n\t\t\tconst verticesY = this.verticesY;\r\n\t\t\tconst direction = this._direction;\r\n\r\n\t\t\tconst vx = GroupD8.vX(direction);\r\n\t\t\tconst vy = GroupD8.vY(direction);\r\n\r\n\t\t\tconst wide = (vx * width) + (vy * height);\r\n\r\n\t\t\tconst anchor = this._anchor as any;\r\n\t\t\tconst normalOffset = wide * ((anchor._x * vx) + (anchor._y * vy));\r\n\t\t\tconst normalFactor = -Math.abs(wide) / (verticesY - 1);\r\n\r\n\t\t\tfor (let i = 0; i < verticesX; i++) {\r\n\t\t\t\tconst point = points[i];\r\n\t\t\t\t// in case someone used Point instead of RopePoint\r\n\t\t\t\tconst offset = points[i].offset || 0;\r\n\t\t\t\tconst scale = (points[i].scale !== undefined) ? points[i].scale : 1.0;\r\n\r\n\t\t\t\tif (i < points.length - 1) {\r\n\t\t\t\t\tnextPoint = points[i + 1];\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tnextPoint = point;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormalY = -(nextPoint.x - lastPoint.x);\r\n\t\t\t\tnormalX = nextPoint.y - lastPoint.y;\r\n\r\n\t\t\t\tconst perpLength = Math.sqrt((normalX * normalX) + (normalY * normalY));\r\n\r\n\t\t\t\tnormalX /= perpLength;\r\n\t\t\t\tnormalY /= perpLength;\r\n\r\n\t\t\t\tfor (let j = 0; j < verticesY; j++) {\r\n\t\t\t\t\tconst ind = (i + (j * verticesX)) * 2;\r\n\r\n\t\t\t\t\tvertices[ind] = point.x + (normalX * (offset + (scale * (normalOffset + (normalFactor * j)))));\r\n\t\t\t\t\tvertices[ind + 1] = point.y + (normalY * (offset + (scale * (normalOffset + (normalFactor * j)))));\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlastPoint = point;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * calculate colors if present\r\n\t\t */\r\n\t\tcalcColors() {\r\n\t\t\tconst colors = this.colors;\r\n\t\t\tconst points = this.points;\r\n\r\n\t\t\tconst verticesX = this.verticesX;\r\n\t\t\tconst verticesY = this.verticesY;\r\n\r\n\t\t\tlet j = 0;\r\n\t\t\tfor (let i = 0; i < verticesX; i++) {\r\n\t\t\t\tconst color = points[i].color;\r\n\t\t\t\tif (color._currentUpdateID !== color._updateID) {\r\n\t\t\t\t\tcolor.updateTransformLocal();\r\n\t\t\t\t\tthis.dirty++;\r\n\t\t\t\t}\r\n\t\t\t\tfor (let j = 0; j < verticesY; j++) {\r\n\t\t\t\t\tconst ind = (i + (j * verticesX)) * 2;\r\n\t\t\t\t\tcolors[ind] = color.darkRgba;\r\n\t\t\t\t\tcolors[ind + 1] = color.lightRgba;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tenableColors() {\r\n\t\t\tfor (let i = 0; i < this.points.length; i++) {\r\n\t\t\t\tthis.points[i].color;\r\n\t\t\t}\r\n\t\t\tsuper.enableColors();\r\n\t\t}\r\n\t}\r\n}","namespace pixi_heaven.mesh {\r\n\t/**\r\n\t * The Rope Point object is a point with some info about normals\r\n\t *\r\n\t * @class\r\n\t * @memberof PIXI.mesh\r\n\t */\r\n\texport class RopePoint extends PIXI.Point {\r\n\t\toffset: number;\r\n\t\tscale: number;\r\n\t\t_color: ColorTransform;\r\n\r\n\t\t/**\r\n\t\t * @param {number} [x=0] - position of the point on the x axis\r\n\t\t * @param {number} [y=0] - position of the point on the y axis\r\n\t\t * @param {number} [offset=0] - offsets the point by normal\r\n\t\t * @param {number} [scale=1.0] - scales the point by normal\r\n\t\t */\r\n\t\tconstructor(x = 0, y = 0, offset = 0, scale = 1.0) {\r\n\t\t\tsuper(x, y);\r\n\t\t\t/**\r\n\t\t\t * @member {number} position of the\r\n\t\t\t * @default 0\r\n\t\t\t */\r\n\t\t\tthis.offset = offset;\r\n\t\t\t/**\r\n\t\t\t * @member {number}\r\n\t\t\t * @default 1.0\r\n\t\t\t */\r\n\t\t\tthis.scale = scale;\r\n\r\n\t\t\t/**\r\n\t\t\t * Color transform\r\n\t\t\t * @type {pixi_heaven.ColorTransform}\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\tthis._color = null;\r\n\t\t}\r\n\r\n\t\tget color(): ColorTransform {\r\n\t\t\tif (this._color === null) {\r\n\t\t\t\tthis._color = new ColorTransform();\r\n\t\t\t}\r\n\r\n\t\t\treturn this._color;\r\n\t\t}\r\n\r\n\t\tset color(val: ColorTransform) {\r\n\t\t\tif (typeof val === \"number\") {\r\n\t\t\t\tthis.color.tintBGR = val;\r\n\t\t\t} else {\r\n\t\t\t\tthis.color = val;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Creates a clone of this point\r\n\t\t *\r\n\t\t * @return {PIXI.RopePoint} a copy of the point\r\n\t\t */\r\n\t\tclone() {\r\n\t\t\treturn new RopePoint(this.x, this.y, this.offset, this.scale);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Copies everything from the given point\r\n\t\t *\r\n\t\t * @param {PIXI.Point | PIXI.RopePoint} p - The point to copy.\r\n\t\t */\r\n\t\tcopy(p: PIXI.Point | RopePoint) {\r\n\t\t\tthis.set(p.x, p.y, (p as any).offset, (p as any).scale);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * Sets the point to a new x and y position.\r\n\t\t * If y is omitted, both x and y will be set to x.\r\n\t\t *\r\n\t\t * @param {number} [x=0] - position of the point on the x axis\r\n\t\t * @param {number} [y=0] - position of the point on the y axis\r\n\t\t * @param {number} [offset=0] - offsets the point by normal\r\n\t\t * @param {number} [scale=1.0] - scales the point by normal\r\n\t\t */\r\n\t\tset(x: number, y: number, offset?: number, scale?: number) {\r\n\t\t\tthis.x = x || 0;\r\n\t\t\tthis.y = y || ((y !== 0) ? this.x : 0);\r\n\t\t\tthis.offset = offset || 0;\r\n\t\t\tthis.scale = (scale !== undefined) ? scale : 1.0;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\timport glCore = PIXI.glCore;\r\n\timport utils = PIXI.utils;\r\n\tconst matrixIdentity = PIXI.Matrix.IDENTITY;\r\n\r\n\texport class MeshColoredRenderer extends PIXI.ObjectRenderer {\r\n\t\tstatic vert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aDark;\r\nattribute vec4 aLight;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform mat3 uTransform;\r\nuniform vec4 uLight, uDark;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vDark;\r\nvarying vec4 vLight;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\r\n\r\n\tvLight.a = uLight.a * aLight.a;\r\n\tvDark.a = uDark.a;\r\n\t\r\n\tvLight.rgb = ((aLight.a - 1.0) * uDark.a + 1.0 - aLight.rgb) * uDark.rgb + aLight.rgb * uLight.rgb;\r\n\tvDark.rgb = ((aDark.a - 1.0) * uDark.a + 1.0 - aDark.rgb) * uDark.rgb + aDark.rgb * uLight.rgb;\r\n}\r\n`;\r\n\r\n\t\tstatic frag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n    gl_FragColor.a = texColor.a * vLight.a;\r\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * vDark.a + 1.0 - texColor.rgb) * vDark.rgb + texColor.rgb * vLight.rgb;\r\n}\r\n`;\r\n\r\n\t\tstatic fragTrim = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nuniform vec4 uClampFrame;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec2 coord = vTextureCoord;\r\n    if (coord.x < uClampFrame.x || coord.x > uClampFrame.z\r\n        || coord.y < uClampFrame.y || coord.y > uClampFrame.w)\r\n            discard;\r\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n    gl_FragColor.a = texColor.a * vLight.a;\r\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * vDark.a + 1.0 - texColor.rgb) * vDark.rgb + texColor.rgb * vLight.rgb;\r\n}\r\n`;\r\n\r\n\t\tshader: PIXI.Shader = null;\r\n\t\tshaderTrim: PIXI.Shader = null;\r\n\r\n\t\t/**\r\n\t\t * Sets up the renderer context and necessary buffers.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tonContextChange() {\r\n\t\t\tconst gl = this.renderer.gl;\r\n\r\n\t\t\tthis.shader = new PIXI.Shader(gl, MeshColoredRenderer.vert, MeshColoredRenderer.frag);\r\n\t\t\tthis.shaderTrim = new PIXI.Shader(gl, MeshColoredRenderer.vert, MeshColoredRenderer.fragTrim);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * renders mesh\r\n\t\t *\r\n\t\t * @param {PIXI.mesh.Mesh} mesh mesh instance\r\n\t\t */\r\n\t\trender(mesh: Mesh) {\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst gl = renderer.gl;\r\n\t\t\tconst texture = mesh._texture;\r\n\r\n\t\t\tif (!texture.valid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet glData = mesh._glDatas[renderer.CONTEXT_UID];\r\n\t\t\t\r\n\t\t\tif (!glData || !glData.colorBuffer) {\r\n\t\t\t\trenderer.bindVao(null);\r\n\r\n\t\t\t\tglData = {\r\n\t\t\t\t\tvertexBuffer: glCore.GLBuffer.createVertexBuffer(gl, mesh.vertices, gl.STREAM_DRAW),\r\n\t\t\t\t\tuvBuffer: glCore.GLBuffer.createVertexBuffer(gl, mesh.uvs, gl.STREAM_DRAW),\r\n\t\t\t\t\tcolorBuffer: glCore.GLBuffer.createVertexBuffer(gl, mesh.colors, gl.STREAM_DRAW),\r\n\t\t\t\t\tindexBuffer: glCore.GLBuffer.createIndexBuffer(gl, mesh.indices, gl.STATIC_DRAW),\r\n\t\t\t\t\t// build the vao object that will render..\r\n\t\t\t\t\tvao: null,\r\n\t\t\t\t\tdirty: mesh.dirty,\r\n\t\t\t\t\tindexDirty: mesh.indexDirty\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// build the vao object that will render..\r\n\t\t\t\tconst attrs = this.shader.attributes;\r\n\r\n\t\t\t\tglData.vao = new glCore.VertexArrayObject(gl)\r\n\t\t\t\t\t.addIndex(glData.indexBuffer)\r\n\t\t\t\t\t.addAttribute(glData.vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, 2 * 4, 0)\r\n\t\t\t\t\t.addAttribute(glData.uvBuffer, attrs.aTextureCoord, gl.FLOAT, false, 2 * 4, 0)\r\n\t\t\t\t\t.addAttribute(glData.colorBuffer, attrs.aDark, gl.UNSIGNED_BYTE, true, 2 * 4, 0)\r\n\t\t\t\t\t.addAttribute(glData.colorBuffer, attrs.aLight, gl.UNSIGNED_BYTE, true, 2 * 4, 4);\r\n\r\n\t\t\t\tmesh._glDatas[renderer.CONTEXT_UID] = glData;\r\n\t\t\t}\r\n\r\n\t\t\trenderer.bindVao(glData.vao);\r\n\r\n\t\t\tif (mesh.dirty !== glData.dirty) {\r\n\t\t\t\tglData.dirty = mesh.dirty;\r\n\t\t\t\tglData.uvBuffer.upload(mesh.uvs);\r\n\t\t\t\tglData.colorBuffer.upload(mesh.colors);\r\n\t\t\t}\r\n\r\n\t\t\tif (mesh.indexDirty !== glData.indexDirty) {\r\n\t\t\t\tglData.indexDirty = mesh.indexDirty;\r\n\t\t\t\tglData.indexBuffer.upload(mesh.indices);\r\n\t\t\t}\r\n\r\n\t\t\tglData.vertexBuffer.upload(mesh.vertices);\r\n\t\t\t\r\n\t\t\tconst isTrimmed = texture.trim && (texture.trim.width < texture.orig.width\r\n\t\t\t\t|| texture.trim.height < texture.orig.height);\r\n\t\t\tconst shader = isTrimmed ? this.shaderTrim : this.shader;\r\n\t\t\t\r\n\t\t\trenderer.bindShader(shader);\r\n\r\n\t\t\tshader.uniforms.uSampler = renderer.bindTexture(texture);\r\n\r\n\t\t\trenderer.state.setBlendMode(utils.correctBlendMode(mesh.blendMode, texture.baseTexture.premultipliedAlpha));\r\n\r\n\t\t\tif (shader.uniforms.uTransform) {\r\n\t\t\t\tif (mesh.uploadUvTransform) {\r\n\t\t\t\t\tshader.uniforms.uTransform = (mesh._uvTransform as any).mapCoord.toArray(true);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tshader.uniforms.uTransform = matrixIdentity.toArray(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isTrimmed)\r\n\t\t\t{\r\n\t\t\t\tshader.uniforms.uClampFrame = (mesh._uvTransform as any).uClampFrame;\r\n\t\t\t}\r\n\t\t\tshader.uniforms.translationMatrix = mesh.worldTransform.toArray(true);\r\n\r\n\t\t\tshader.uniforms.uLight = mesh.color.light;\r\n\t\t\tshader.uniforms.uDark = mesh.color.dark;\r\n\r\n\t\t\tconst drawMode = mesh.drawMode === Mesh.DRAW_MODES.TRIANGLE_MESH ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\r\n\r\n\t\t\tglData.vao.draw(drawMode, mesh.indices.length, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('meshColored', MeshColoredRenderer);\r\n}\r\n","namespace pixi_heaven.mesh {\r\n\timport glCore = PIXI.glCore;\r\n\timport utils = PIXI.utils;\r\n\tconst matrixIdentity = PIXI.Matrix.IDENTITY;\r\n\r\n\texport class MeshHeavenRenderer extends PIXI.ObjectRenderer {\r\n\t\tstatic vert = `\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\n\r\nuniform mat3 projectionMatrix;\r\nuniform mat3 translationMatrix;\r\nuniform mat3 uTransform;\r\n\r\nvarying vec2 vTextureCoord;\r\n\r\nvoid main(void)\r\n{\r\n    gl_Position = vec4((projectionMatrix * translationMatrix * vec3(aVertexPosition, 1.0)).xy, 0.0, 1.0);\r\n\r\n    vTextureCoord = (uTransform * vec3(aTextureCoord, 1.0)).xy;\r\n}\r\n`;\r\n\r\n\t\tstatic frag = `\r\nvarying vec2 vTextureCoord;\r\nuniform vec4 uLight, uDark;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n    gl_FragColor.a = texColor.a * uLight.a;\r\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * uDark.a + 1.0 - texColor.rgb) * uDark.rgb + texColor.rgb * uLight.rgb;\r\n}\r\n`;\r\n\r\n\t\tstatic fragTrim = `\r\nvarying vec2 vTextureCoord;\r\nuniform vec4 uLight, uDark;\r\nuniform vec4 uClampFrame;\r\n\r\nuniform sampler2D uSampler;\r\n\r\nvoid main(void)\r\n{\r\n    vec2 coord = vTextureCoord;\r\n    if (coord.x < uClampFrame.x || coord.x > uClampFrame.z\r\n        || coord.y < uClampFrame.y || coord.y > uClampFrame.w)\r\n            discard;\r\n    vec4 texColor = texture2D(uSampler, vTextureCoord);\r\n    gl_FragColor.a = texColor.a * uLight.a;\r\n\tgl_FragColor.rgb = ((texColor.a - 1.0) * uDark.a + 1.0 - texColor.rgb) * uDark.rgb + texColor.rgb * uLight.rgb;\r\n}\r\n`;\r\n\r\n\t\tshader: PIXI.Shader = null;\r\n\t\tshaderTrim: PIXI.Shader = null;\r\n\r\n\t\t/**\r\n\t\t * Sets up the renderer context and necessary buffers.\r\n\t\t *\r\n\t\t * @private\r\n\t\t */\r\n\t\tonContextChange() {\r\n\t\t\tconst gl = this.renderer.gl;\r\n\r\n\t\t\tthis.shader = new PIXI.Shader(gl, MeshHeavenRenderer.vert, MeshHeavenRenderer.frag);\r\n\t\t\tthis.shaderTrim = new PIXI.Shader(gl, MeshHeavenRenderer.vert, MeshHeavenRenderer.fragTrim);\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * renders mesh\r\n\t\t *\r\n\t\t * @param {PIXI.mesh.Mesh} mesh mesh instance\r\n\t\t */\r\n\t\trender(mesh: Mesh) {\r\n\t\t\tconst renderer = this.renderer;\r\n\t\t\tconst gl = renderer.gl;\r\n\t\t\tconst texture = mesh._texture;\r\n\r\n\t\t\tif (!texture.valid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tlet glData = mesh._glDatas[renderer.CONTEXT_UID];\r\n\t\t\t\r\n\t\t\tif (!glData) {\r\n\t\t\t\trenderer.bindVao(null);\r\n\r\n\t\t\t\tglData = {\r\n\t\t\t\t\tvertexBuffer: glCore.GLBuffer.createVertexBuffer(gl, mesh.vertices, gl.STREAM_DRAW),\r\n\t\t\t\t\tuvBuffer: glCore.GLBuffer.createVertexBuffer(gl, mesh.uvs, gl.STREAM_DRAW),\r\n\t\t\t\t\tindexBuffer: glCore.GLBuffer.createIndexBuffer(gl, mesh.indices, gl.STATIC_DRAW),\r\n\t\t\t\t\t// build the vao object that will render..\r\n\t\t\t\t\tvao: null,\r\n\t\t\t\t\tdirty: mesh.dirty,\r\n\t\t\t\t\tindexDirty: mesh.indexDirty\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// build the vao object that will render..\r\n\t\t\t\tglData.vao = new glCore.VertexArrayObject(gl)\r\n\t\t\t\t\t.addIndex(glData.indexBuffer)\r\n\t\t\t\t\t.addAttribute(glData.vertexBuffer, this.shader.attributes.aVertexPosition, gl.FLOAT, false, 2 * 4, 0)\r\n\t\t\t\t\t.addAttribute(glData.uvBuffer, this.shader.attributes.aTextureCoord, gl.FLOAT, false, 2 * 4, 0);\r\n\r\n\t\t\t\tmesh._glDatas[renderer.CONTEXT_UID] = glData;\r\n\t\t\t}\r\n\r\n\t\t\trenderer.bindVao(glData.vao);\r\n\r\n\t\t\tif (mesh.dirty !== glData.dirty) {\r\n\t\t\t\tglData.dirty = mesh.dirty;\r\n\t\t\t\tglData.uvBuffer.upload(mesh.uvs);\r\n\t\t\t}\r\n\r\n\t\t\tif (mesh.indexDirty !== glData.indexDirty) {\r\n\t\t\t\tglData.indexDirty = mesh.indexDirty;\r\n\t\t\t\tglData.indexBuffer.upload(mesh.indices);\r\n\t\t\t}\r\n\r\n\t\t\tglData.vertexBuffer.upload(mesh.vertices);\r\n\t\t\t\r\n\t\t\tconst isTrimmed = texture.trim && (texture.trim.width < texture.orig.width\r\n\t\t\t\t|| texture.trim.height < texture.orig.height);\r\n\t\t\tconst shader = isTrimmed ? this.shaderTrim : this.shader;\r\n\t\t\t\r\n\t\t\trenderer.bindShader(shader);\r\n\r\n\t\t\tshader.uniforms.uSampler = renderer.bindTexture(texture);\r\n\r\n\t\t\trenderer.state.setBlendMode(utils.correctBlendMode(mesh.blendMode, texture.baseTexture.premultipliedAlpha));\r\n\r\n\t\t\tif (shader.uniforms.uTransform) {\r\n\t\t\t\tif (mesh.uploadUvTransform) {\r\n\t\t\t\t\tshader.uniforms.uTransform = (mesh._uvTransform as any).mapCoord.toArray(true);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tshader.uniforms.uTransform = matrixIdentity.toArray(true);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (isTrimmed)\r\n\t\t\t{\r\n\t\t\t\tshader.uniforms.uClampFrame = (mesh._uvTransform as any).uClampFrame;\r\n\t\t\t}\r\n\t\t\tshader.uniforms.translationMatrix = mesh.worldTransform.toArray(true);\r\n\r\n\t\t\tshader.uniforms.uLight = mesh.color.light;\r\n\t\t\tshader.uniforms.uDark = mesh.color.dark;\r\n\r\n\t\t\tconst drawMode = mesh.drawMode === Mesh.DRAW_MODES.TRIANGLE_MESH ? gl.TRIANGLE_STRIP : gl.TRIANGLES;\r\n\r\n\t\t\tglData.vao.draw(drawMode, mesh.indices.length, 0);\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('meshHeaven', MeshHeavenRenderer);\r\n}\r\n","namespace pixi_heaven {\r\n\texport class TexturePolygon {\r\n\t\tconstructor(public vertices: ArrayLike<number>, public uvs: ArrayLike<number>, public indices: ArrayLike<number>) {\r\n\t\t}\r\n\t}\r\n\r\n\t(PIXI.Spritesheet.prototype as any)._processFrames = function (initialFrameIndex: number) {\r\n\t\tconst meta = this.data.meta;\r\n\r\n\t\tlet frameIndex = initialFrameIndex;\r\n\t\tconst maxFrames = PIXI.Spritesheet.BATCH_SIZE;\r\n\t\tconst sourceScale = this.baseTexture.sourceScale;\r\n\r\n\t\twhile (frameIndex - initialFrameIndex < maxFrames && frameIndex < this._frameKeys.length) {\r\n\t\t\tconst i = this._frameKeys[frameIndex];\r\n\t\t\tconst data = this._frames[i];\r\n\t\t\tconst rect = data.frame;\r\n\r\n\t\t\tif (rect) {\r\n\t\t\t\tlet frame = null;\r\n\t\t\t\tlet trim = null;\r\n\t\t\t\tconst sourceSize = data.trimmed !== false && data.sourceSize\r\n\t\t\t\t\t? data.sourceSize : data.frame;\r\n\r\n\t\t\t\tconst orig = new PIXI.Rectangle(\r\n\t\t\t\t\t0,\r\n\t\t\t\t\t0,\r\n\t\t\t\t\tMath.floor(sourceSize.w * sourceScale) / this.resolution,\r\n\t\t\t\t\tMath.floor(sourceSize.h * sourceScale) / this.resolution\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (data.rotated) {\r\n\t\t\t\t\tframe = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(rect.x * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.y * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w * sourceScale) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tframe = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(rect.x * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.y * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h * sourceScale) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t//  Check to see if the sprite is trimmed\r\n\t\t\t\tif (data.trimmed !== false && data.spriteSourceSize) {\r\n\t\t\t\t\ttrim = new PIXI.Rectangle(\r\n\t\t\t\t\t\tMath.floor(data.spriteSourceSize.x * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(data.spriteSourceSize.y * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.w * sourceScale) / this.resolution,\r\n\t\t\t\t\t\tMath.floor(rect.h * sourceScale) / this.resolution\r\n\t\t\t\t\t);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.textures[i] = new PIXI.Texture(\r\n\t\t\t\t\tthis.baseTexture,\r\n\t\t\t\t\tframe,\r\n\t\t\t\t\torig,\r\n\t\t\t\t\ttrim,\r\n\t\t\t\t\tdata.rotated ? 2 : 0\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (data.vertices) {\r\n\t\t\t\t\tconst vertices = new Float32Array(data.vertices.length * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < data.vertices.length; i++) {\r\n\t\t\t\t\t\tvertices[i * 2] = Math.floor(data.vertices[i][0] * sourceScale) / this.resolution;\r\n\t\t\t\t\t\tvertices[i * 2 + 1] = Math.floor(data.vertices[i][1] * sourceScale) / this.resolution;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst uvs = new Float32Array(data.verticesUV.length * 2);\r\n\r\n\t\t\t\t\tfor (let i = 0; i < data.verticesUV.length; i++) {\r\n\t\t\t\t\t\tuvs[i * 2] = data.verticesUV[i][0] / meta.size.w;\r\n\t\t\t\t\t\tuvs[i * 2 + 1] = data.verticesUV[i][1] / meta.size.h;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst indices = new Uint16Array(data.triangles.length * 3);\r\n\t\t\t\t\tfor (let i = 0; i < data.triangles.length; i++) {\r\n\t\t\t\t\t\tindices[i * 3] = data.triangles[i][0];\r\n\t\t\t\t\t\tindices[i * 3 + 1] = data.triangles[i][1];\r\n\t\t\t\t\t\tindices[i * 3 + 2] = data.triangles[i][2];\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t(this.textures[i] as any).polygon = new TexturePolygon(vertices, uvs, indices);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// lets also add the frame to pixi's global cache for fromFrame and fromImage functions\r\n\t\t\t\tPIXI.Texture.addToCache(this.textures[i], i);\r\n\t\t\t}\r\n\r\n\t\t\tframeIndex++;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\texport interface IAtlasOptions {\r\n\t\twidth ?: number;\r\n\t\theight ?: number;\r\n\t\tloadFactor ?: number;\r\n\t\trepackBeforeResize ?: boolean;\r\n\t\trepackAfterResize ?: boolean;\r\n\t\talgoTreeResize?: boolean;\r\n\t\tmaxSize ?: number;\r\n\t\tformat ?: number;\r\n\t\thasAllFields ?: boolean;\r\n\t\tmipLevels ?: number;\r\n\t\tpadding ?: number;\r\n\t}\r\n\r\n\texport class AtlasOptions implements IAtlasOptions {\r\n\t\twidth = 2048;\r\n\t\theight = 2048;\r\n\t\tloadFactor = 0.95;\r\n\t\trepackBeforeResize = true;\r\n\t\trepackAfterResize = true;\r\n\t\talgoTreeResize = false;\r\n\t\tmaxSize = 0;\r\n\t\tmipLevels = 0;\r\n\t\tpadding = 0;\r\n\r\n\t\tformat = WebGLRenderingContext.RGBA;\r\n\r\n\t\tstatic MAX_SIZE = 0;\r\n\r\n\t\tconstructor(src: IAtlasOptions) {\r\n\t\t\tif (src) {\r\n\t\t\t\tthis.assign(src);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tassign(src: IAtlasOptions) {\r\n\t\t\tthis.width = src.width || this.width;\r\n\t\t\tthis.height = src.height || src.width || this.height;\r\n\t\t\tthis.maxSize = src.maxSize || AtlasOptions.MAX_SIZE;\r\n\t\t\tthis.format = src.format || this.format;\r\n\t\t\tthis.loadFactor = src.loadFactor || this.loadFactor;\r\n\t\t\tthis.padding = src.padding || this.padding;\r\n\t\t\tthis.mipLevels = src.mipLevels || this.mipLevels;\r\n\t\t\tif (src.repackAfterResize !== undefined) {\r\n\t\t\t\tthis.repackAfterResize = src.repackAfterResize;\r\n\t\t\t}\r\n\t\t\tif (src.repackBeforeResize !== undefined) {\r\n\t\t\t\tthis.repackBeforeResize = src.repackBeforeResize;\r\n\t\t\t}\r\n\t\t\tif (src.algoTreeResize !== undefined) {\r\n\t\t\t\tthis.algoTreeResize = src.algoTreeResize;\r\n\t\t\t}\r\n\t\t\treturn this;\r\n\t\t}\r\n\t}\r\n}\r\n","namespace pixi_heaven {\r\n\tconst RGBA = WebGLRenderingContext.RGBA;\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport Rectangle = PIXI.Rectangle;\r\n\r\n\texport class SuperAtlasEntry {\r\n\t\tbaseTexture: BaseTexture;\r\n\t\tsuperAtlas: SuperAtlas;\r\n\t}\r\n\r\n\texport class AtlasTree implements IRepackResult {\r\n\t\tfailed: Array<AtlasEntry> = [];\r\n\r\n\t\troot: AtlasNode<AtlasEntry>;\r\n\r\n\t\tgood: Array<AtlasEntry> = [];\r\n\r\n\t\thash: { [key: number]: AtlasNode<AtlasEntry> } = {};\r\n\r\n\t\tapply() {\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\t}\r\n\r\n\texport class SuperAtlas implements ITextureResource, IAtlas {\r\n\t\tstatic MAX_SIZE = 2048;\r\n\r\n\t\tbaseTexture: PIXI.BaseTexture = null;\r\n\t\tformat: number = RGBA;\r\n\t\twidth: number = 2048;\r\n\t\theight: number = 2048;\r\n\t\toptions: AtlasOptions;\r\n\r\n\t\tall: { [key: number]: AtlasEntry } = {};\r\n\r\n\t\ttree: AtlasTree = null;\r\n\r\n\t\tonTextureNew(baseTexture: PIXI.BaseTexture) {\r\n\t\t\tthis.baseTexture = baseTexture;\r\n\t\t\tbaseTexture.resource = this;\r\n\t\t\tbaseTexture.width = this.width;\r\n\t\t\tbaseTexture.height = this.height;\r\n\t\t\tbaseTexture.hasLoaded = true;\r\n\t\t\tbaseTexture.height = this.height;\r\n\t\t}\r\n\r\n\t\tstatic create(options: IAtlasOptions) {\r\n\t\t\tlet opt = options instanceof AtlasOptions ? options : new AtlasOptions(options);\r\n\t\t\tlet atlas = new SuperAtlas();\r\n\t\t\tatlas.options = opt;\r\n\t\t\tatlas.width = opt.width;\r\n\t\t\tatlas.height = opt.height;\r\n\t\t\tatlas.format = opt.format;\r\n\t\t\tatlas.onTextureNew(new PIXI.BaseTexture());\r\n\r\n\t\t\tatlas.tree = new AtlasTree();\r\n\t\t\tatlas.tree.root = atlas.createAtlasRoot();\r\n\r\n\t\t\treturn atlas;\r\n\t\t}\r\n\r\n\t\tdestroy() {\r\n\t\t\tif (this.baseTexture) {\r\n\t\t\t\tthis.baseTexture.destroy();\r\n\t\t\t\tthis.baseTexture = null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tadd(texture: BaseTexture | PIXI.Texture, swapCache?: boolean): TextureRegion {\r\n\t\t\tlet baseTexture: PIXI.BaseTexture;\r\n\t\t\tlet arg: PIXI.Texture;\r\n\t\t\tif (texture instanceof BaseTexture) {\r\n\t\t\t\tbaseTexture = texture as BaseTexture;\r\n\t\t\t\targ = new PIXI.Texture(baseTexture);\r\n\t\t\t} else {\r\n\t\t\t\tbaseTexture = texture.baseTexture;\r\n\t\t\t\targ = texture;\r\n\t\t\t}\r\n\r\n\t\t\tlet entry = this.all[baseTexture.uid];\r\n\t\t\tif (!entry) {\r\n\t\t\t\tentry = new AtlasEntry(this, baseTexture);\r\n\r\n\t\t\t\t// pad it\r\n\t\t\t\tlet p1 = this.options.padding, p2 = (1 << this.options.mipLevels);\r\n\t\t\t\tlet w1 = entry.width + p1, h1 = entry.height + p1;\r\n\t\t\t\tentry.width = w1 + (p2 - entry.width % p2) % p2;\r\n\t\t\t\tentry.height = h1 + (p2 - entry.height % p2) % p2;\r\n\r\n\t\t\t\tthis.insert(entry);\r\n\t\t\t}\r\n\r\n\t\t\tlet region = new TextureRegion(entry, arg);\r\n\t\t\tif (swapCache) {\r\n\t\t\t\tlet ids = texture.textureCacheIds;\r\n\t\t\t\tfor (let i = 0; i < ids.length; i++) {\r\n\t\t\t\t\tPIXI.utils.TextureCache[ids[i]] = region;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tentry.regions.push(region);\r\n\t\t\treturn region;\r\n\t\t}\r\n\r\n\t\taddHash(textures: { [key: string]: PIXI.Texture; }, swapCache?: boolean): { [key: string]: TextureRegion; } {\r\n\t\t\tlet hash: { [key: string]: TextureRegion; } = {};\r\n\t\t\tfor (let key in textures) {\r\n\t\t\t\thash[key] = this.add(textures[key], swapCache);\r\n\t\t\t}\r\n\t\t\treturn hash;\r\n\t\t}\r\n\r\n\t\tinsert(entry: AtlasEntry) {\r\n\t\t\tif (this.tryInsert(entry)) return;\r\n\t\t\tthis.tree.failed.push(entry);\r\n\t\t\tthis.all[entry.baseTexture.uid] = entry;\r\n\t\t}\r\n\r\n\t\tremove(entry: AtlasEntry) {\r\n\t\t\tif (entry.currentNode == null) {\r\n\t\t\t\tlet failed = this.tree.failed;\r\n\t\t\t\tlet ind = failed.indexOf(entry);\r\n\t\t\t\tif (ind >= 0) {\r\n\t\t\t\t\tfailed.splice(ind, 1);\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\"Cant remove packed texture\");\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\ttryInsert(entry: AtlasEntry): boolean {\r\n\t\t\tlet node = this.tree.root.insert(this.width, this.height,\r\n\t\t\t\tentry.width, entry.height, entry);\r\n\t\t\tif (!node) {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t\tentry.nodeUpdateID = ++this.baseTexture._updateID;\r\n\t\t\tentry.currentNode = node;\r\n\t\t\tentry.currentAtlas = this;\r\n\t\t\tthis.all[entry.baseTexture.uid] = entry;\r\n\t\t\tthis.tree.hash[entry.baseTexture.uid] = node;\r\n\t\t\tthis.tree.good.push(entry);\r\n\t\t\treturn true;\r\n\t\t}\r\n\r\n\t\tprivate createAtlasRoot() {\r\n\t\t\tlet res = new AtlasNode<AtlasEntry>();\r\n\t\t\tif (!this.options.algoTreeResize) {\r\n\t\t\t\tres.rect.width = this.width;\r\n\t\t\t\tres.rect.height = this.height;\r\n\t\t\t}\r\n\t\t\treturn res;\r\n\t\t}\r\n\r\n\t\trepack(failOnFirst: boolean = false): IRepackResult {\r\n\t\t\tlet pack = new AtlasTree();\r\n\r\n\t\t\tlet all = this.tree.good.slice(0);\r\n\t\t\tlet failed = this.tree.failed;\r\n\t\t\tfor (let i = 0; i < failed.length; i++) {\r\n\t\t\t\tall.push(failed[i]);\r\n\t\t\t}\r\n\r\n\t\t\tall.sort((a: AtlasEntry, b: AtlasEntry) => {\r\n\t\t\t\tif (b.width == a.width) {\r\n\t\t\t\t\treturn b.height - a.height;\r\n\t\t\t\t}\r\n\t\t\t\treturn b.width - a.width;\r\n\t\t\t});\r\n\r\n\t\t\tlet root = this.createAtlasRoot();\r\n\t\t\tpack.root = root;\r\n\t\t\tfor (let obj of all) {\r\n\t\t\t\tlet node = root.insert(\r\n\t\t\t\t\tthis.width, this.height,\r\n\t\t\t\t\tobj.width, obj.height, obj);\r\n\t\t\t\tif (!node) {\r\n\t\t\t\t\tpack.failed.push(obj);\r\n\t\t\t\t\tif (failOnFirst) {\r\n\t\t\t\t\t\treturn pack;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpack.hash[obj.baseTexture.uid] = node;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tpack.apply = () => {\r\n\t\t\t\t//TODO: full copy?\r\n\t\t\t\tthis.tree.root = pack.root;\r\n\t\t\t\tthis.tree.failed = pack.failed.slice(0);\r\n\t\t\t\tthis.tree.hash = pack.hash;\r\n\r\n\t\t\t\tfor (let obj of all) {\r\n\t\t\t\t\tobj.currentNode = pack.hash[obj.baseTexture.uid] || null;\r\n\t\t\t\t\tobj.currentAtlas = obj.currentNode ? this : null;\r\n\t\t\t\t\tfor (let region of obj.regions) {\r\n\t\t\t\t\t\tregion.updateFrame();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.imageTextureRebuildUpdateID++;\r\n\t\t\t};\r\n\t\t\treturn pack;\r\n\t\t}\r\n\r\n\t\tprepare(renderer: PIXI.WebGLRenderer): Promise<void> {\r\n\t\t\t//TODO: wait while everything loads\r\n\r\n\t\t\trenderer.textureManager.updateTexture(this.baseTexture);\r\n\t\t\tthrow new Error(\"Method not implemented.\");\r\n\t\t}\r\n\r\n\t\timageTextureRebuildUpdateID: number = 0;\r\n\r\n\t\tonTextureUpload(renderer: PIXI.WebGLRenderer, baseTexture: PIXI.BaseTexture, tex: PIXI.glCore.GLTexture): boolean {\r\n\t\t\ttex.bind();\r\n\t\t\tconst imgTexture = this.baseTexture;\r\n\t\t\tconst gl = tex.gl;\r\n\t\t\tconst levels = this.options.mipLevels;\r\n\r\n\t\t\ttex.mipmap = levels > 0;\r\n\t\t\ttex.premultiplyAlpha = imgTexture.premultipliedAlpha;\r\n\t\t\tgl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, imgTexture.premultipliedAlpha);\r\n\r\n\t\t\tconst uploadAll = tex._updateID < this.imageTextureRebuildUpdateID;\r\n\t\t\tif (uploadAll) {\r\n\t\t\t\tgl.texImage2D(\r\n\t\t\t\t\tgl.TEXTURE_2D, //GLenum target\r\n\t\t\t\t\t0, //GLint level\r\n\t\t\t\t\tgl.RGBA, //GLint internalformat\r\n\t\t\t\t\timgTexture.width, //GLsizei width\r\n\t\t\t\t\timgTexture.height, //GLsizei height\r\n\t\t\t\t\t0, //GLint border // should be 0, it is borderColor\r\n\t\t\t\t\tgl.RGBA, //GLenum format\r\n\t\t\t\t\tgl.UNSIGNED_BYTE,//GLenum type\r\n\t\t\t\t\tnull //ArrayBufferView? pixels\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (tex.mipmap) {\r\n\t\t\t\t\t//testing\r\n\t\t\t\t\tfor (let lvl = 1; (imgTexture.width >> lvl) > 0; lvl++) {\r\n\t\t\t\t\t\tgl.texImage2D(\r\n\t\t\t\t\t\t\tgl.TEXTURE_2D, //GLenum target\r\n\t\t\t\t\t\t\tlvl, //GLint level\r\n\t\t\t\t\t\t\tgl.RGBA, //GLint internalformat\r\n\t\t\t\t\t\t\timgTexture.width >> lvl, //GLsizei width\r\n\t\t\t\t\t\t\timgTexture.height >> lvl, //GLsizei height\r\n\t\t\t\t\t\t\t0, //GLint border // should be 0, it is borderColor\r\n\t\t\t\t\t\t\tgl.RGBA, //GLenum format\r\n\t\t\t\t\t\t\tgl.UNSIGNED_BYTE,//GLenum type\r\n\t\t\t\t\t\t\tnull //ArrayBufferView? pixels\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tfor (let key in this.tree.hash) {\r\n\t\t\t\tlet node = this.tree.hash[key];\r\n\t\t\t\tlet entry = node.data;\r\n\t\t\t\tlet entryTex = entry.baseTexture;\r\n\t\t\t\t// if (!obj.isLoaded) continue;\r\n\t\t\t\tif (!uploadAll && tex._updateID >= entry.nodeUpdateID) continue;\r\n\r\n\t\t\t\tlet rect: Rectangle = node.rect;\r\n\t\t\t\tgl.texSubImage2D(\r\n\t\t\t\t\tgl.TEXTURE_2D, //GLenum target\r\n\t\t\t\t\t0, //GLint level\r\n\t\t\t\t\trect.left, // GLint xoffset\r\n\t\t\t\t\trect.top, // GLint yoffset\r\n\t\t\t\t\tgl.RGBA, //GLenum format\r\n\t\t\t\t\tgl.UNSIGNED_BYTE,//GLenum type\r\n\t\t\t\t\tentry.baseTexture.source // TexImageSource source\r\n\t\t\t\t);\r\n\r\n\t\t\t\tif (levels > 0) {\r\n\t\t\t\t\tif (!entryTex._mips || entryTex._mips.length < levels) {\r\n\t\t\t\t\t\tentryTex.generateMips(levels);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst mips = entryTex._mips;\r\n\t\t\t\t\tfor (let lvl = 1; lvl <= levels; lvl++) {\r\n\t\t\t\t\t\tconst mip = mips[lvl - 1];\r\n\t\t\t\t\t\tgl.texSubImage2D(\r\n\t\t\t\t\t\t\tgl.TEXTURE_2D, //GLenum target\r\n\t\t\t\t\t\t\tlvl, //GLint level\r\n\t\t\t\t\t\t\trect.left >> lvl, // GLint xoffset\r\n\t\t\t\t\t\t\trect.top >> lvl, // GLint yoffset\r\n\t\t\t\t\t\t\tmip.width,\r\n\t\t\t\t\t\t\tmip.height,\r\n\t\t\t\t\t\t\tgl.RGBA, //GLenum format\r\n\t\t\t\t\t\t\tgl.UNSIGNED_BYTE,//GLenum type\r\n\t\t\t\t\t\t\tmip.data\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n}","namespace pixi_heaven {\r\n\texport class BitmapText extends PIXI.extras.BitmapText {\r\n\t\tconstructor(text: string, style?: PIXI.extras.BitmapTextStyle) {\r\n\t\t\tsuper(text, style);\r\n\t\t\tif (!this.color) {\r\n\t\t\t\tthis.color = new ColorTransform();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcolor: ColorTransform;\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tthis._boundsID++;\r\n\r\n\t\t\tthis.transform.updateTransform(this.parent.transform);\r\n\r\n\t\t\tthis.worldAlpha = this.alpha * this.parent.worldAlpha;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\t\tthis.color.updateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, j = this.children.length; i < j; ++i) {\r\n\t\t\t\tconst child = this.children[i];\r\n\r\n\t\t\t\tif (child.visible) {\r\n\t\t\t\t\tchild.updateTransform();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\taddChild(child: any, ...additionalChildren: PIXI.DisplayObject[]): any {\r\n\t\t\tif (!child.color && child.vertexData) {\r\n\t\t\t\tif (!this.color) {\r\n\t\t\t\t\tthis.color = new ColorTransform();\r\n\t\t\t\t}\r\n\t\t\t\tchild.color = this.color;\r\n\t\t\t\tchild.pluginName = 'spriteHeaven';\r\n\t\t\t}\r\n\t\t\treturn super.addChild(child, ...additionalChildren);\r\n\t\t}\r\n\t}\r\n}","namespace pixi_heaven {\r\n\tconst whiteRgba = [1.0, 1.0, 1.0, 1.0];\r\n\tconst blackRgba = [0.0, 0.0, 0.0, 1.0];\r\n\r\n\texport class ColorTransform {\r\n\t\tdark = new Float32Array(blackRgba);\r\n\t\tlight = new Float32Array(whiteRgba);\r\n\r\n\t\t_updateID = 0;\r\n\t\t_currentUpdateID = -1;\r\n\r\n\t\tdarkRgba: number = 0;\r\n\t\tlightRgba: number = -1;\r\n\t\thasNoTint: boolean = true;\r\n\r\n\t\thue: number = 0;\r\n\r\n\t\tget darkR() {\r\n\t\t\treturn this.dark[0];\r\n\t\t}\r\n\r\n\t\tset darkR(value: number) {\r\n\t\t\tif (this.dark[0] === value) return;\r\n\t\t\tthis.dark[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkG() {\r\n\t\t\treturn this.dark[1];\r\n\t\t}\r\n\r\n\t\tset darkG(value: number) {\r\n\t\t\tif (this.dark[1] === value) return;\r\n\t\t\tthis.dark[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget darkB() {\r\n\t\t\treturn this.dark[2];\r\n\t\t}\r\n\r\n\t\tset darkB(value: number) {\r\n\t\t\tif (this.dark[2] === value) return;\r\n\t\t\tthis.dark[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightR() {\r\n\t\t\treturn this.light[0];\r\n\t\t}\r\n\r\n\t\tset lightR(value: number) {\r\n\t\t\tif (this.light[0] === value) return;\r\n\t\t\tthis.light[0] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightG() {\r\n\t\t\treturn this.light[1];\r\n\t\t}\r\n\r\n\t\tset lightG(value: number) {\r\n\t\t\tif (this.light[1] === value) return;\r\n\t\t\tthis.light[1] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget lightB() {\r\n\t\t\treturn this.light[2];\r\n\t\t}\r\n\r\n\t\tset lightB(value: number) {\r\n\t\t\tif (this.light[2] === value) return;\r\n\t\t\tthis.light[2] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget alpha() {\r\n\t\t\treturn this.light[3];\r\n\t\t}\r\n\r\n\t\tset alpha(value: number) {\r\n\t\t\tif (this.light[3] === value) return;\r\n\t\t\tthis.light[3] = value;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget pma() {\r\n\t\t\treturn this.dark[3] !== 0.0;\r\n\t\t}\r\n\r\n\t\tset pma(value: boolean) {\r\n\t\t\tif ((this.dark[3] !== 0.0) !== value) return;\r\n\t\t\tthis.dark[3] = value ? 1.0 : 0.0;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tget tintBGR() {\r\n\t\t\tconst light = this.light;\r\n\t\t\treturn ((light[0] * 255) << 16) + ((light[1] * 255) << 8) + (light[2] * 255 | 0);\r\n\t\t}\r\n\r\n\t\tset tintBGR(value: number) {\r\n\t\t\tthis.setLight(\r\n\t\t\t\t((value >> 16) & 0xff) / 255.0,\r\n\t\t\t\t((value >> 8) & 0xff) / 255.0,\r\n\t\t\t\t(value & 0xff) / 255.0\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t\tsetLight(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.light;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tsetDark(R: number, G: number, B: number) {\r\n\t\t\tconst color = this.dark;\r\n\r\n\t\t\tif (color[0] === R && color[1] === G && color[2] === B) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tcolor[0] = R;\r\n\t\t\tcolor[1] = G;\r\n\t\t\tcolor[2] = B;\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tclear() {\r\n\t\t\tthis.dark[0] = 0.0;\r\n\t\t\tthis.dark[1] = 0.0;\r\n\t\t\tthis.dark[2] = 0.0;\r\n\t\t\tthis.light[0] = 1.0;\r\n\t\t\tthis.light[1] = 1.0;\r\n\t\t\tthis.light[2] = 1.0;\r\n\t\t}\r\n\r\n\t\tinvalidate() {\r\n\t\t\tthis._updateID++;\r\n\t\t}\r\n\r\n\t\tupdateTransformLocal() {\r\n\t\t\tconst dark = this.dark, light = this.light;\r\n\t\t\tconst la = 255 * (1.0 + (light[3] - 1.0) * dark[3]);\r\n\t\t\tthis.hasNoTint = dark[0] === 0.0 && dark[1] === 0.0 && dark[2] === 0.0\r\n\t\t\t\t&& light[0] === 1.0 && light[1] === 1.0 && light[2] === 1.0;\r\n\t\t\tthis.darkRgba = (dark[0] * la | 0) + ((dark[1] * la) << 8)\r\n\t\t\t\t+ ((dark[2] * la) << 16) + ((dark[3] * 255) << 24);\r\n\t\t\tthis.lightRgba = (light[0] * la | 0) + ((light[1] * la) << 8)\r\n\t\t\t\t+ ((light[2] * la) << 16) + ((light[3] * 255) << 24);\r\n\t\t\tthis._currentUpdateID = this._updateID;\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tif (this._currentUpdateID === this._updateID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tthis.updateTransformLocal();\r\n\t\t}\r\n\t}\r\n}\r\n","declare module PIXI {\r\n\tinterface Sprite {\r\n\t\tconvertToHeaven(): pixi_heaven.Sprite;\r\n\t}\r\n\r\n\tinterface Mesh {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Graphics {\r\n\t\tconvertToHeaven(): void;\r\n\t}\r\n\r\n\tinterface Container {\r\n\t\tconvertToHeaven(): void;\r\n\r\n\t\tconvertSubtreeToHeaven(): void;\r\n\t}\r\n\r\n\t// TODO: ParticleContainer?\r\n}\r\n\r\nnamespace pixi_heaven {\r\n\t(PIXI as any).Container.prototype.convertToHeaven = function () {\r\n\t};\r\n\r\n\tfunction tintGet() {\r\n\t\treturn this.color.tintBGR;\r\n\t}\r\n\r\n\tfunction tintSet(value: number) {\r\n\t\tthis.color.tintBGR = value;\r\n\t}\r\n\r\n\tfunction tintRGBGet() {\r\n\t\tthis.color.updateTransform();\r\n\t\treturn this.color.lightRgba & 0xffffff;\r\n\t}\r\n\r\n\t(PIXI as any).Sprite.prototype.convertToHeaven = function () {\r\n\t\tif (this.color) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tObject.defineProperty(this, \"tint\", {\r\n\t\t\tget: tintGet,\r\n\t\t\tset: tintSet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tObject.defineProperty(this, \"_tintRGB\", {\r\n\t\t\tget: tintRGBGet,\r\n\t\t\tenumerable: true,\r\n\t\t\tconfigurable: true\r\n\t\t});\r\n\t\tthis._onTextureUpdate = Sprite.prototype._onTextureUpdate;\r\n\t\tthis.updateTransform = Sprite.prototype.updateTransform;\r\n\t\tthis.color = new ColorTransform();\r\n\t\tthis.pluginName = 'spriteHeaven';\r\n\t\treturn this;\r\n\t};\r\n\r\n\t(PIXI as any).Container.prototype.convertSubtreeToHeaven = function () {\r\n\t\tif (this.convertToHeaven) {\r\n\t\t\tthis.convertToHeaven();\r\n\t\t}\r\n\t\tfor (let i = 0; i < this.children.length; i++) {\r\n\t\t\tthis.children[i].convertSubtreeToHeaven();\r\n\t\t}\r\n\t};\r\n}\r\n","namespace pixi_heaven {\r\n\timport sign = PIXI.utils.sign;\r\n\r\n\tconst tempMat = new PIXI.Matrix();\r\n\r\n\texport class Sprite extends PIXI.Sprite implements ITextureAnimationTarget {\r\n\t\tcolor = new ColorTransform();\r\n\t\tmaskSprite: PIXI.Sprite = null;\r\n\t\tmaskVertexData: Float32Array = null;\r\n\t\tuvs: Float32Array = null;\r\n\t\tindices: Uint16Array = null;\r\n\t\tanimState: AnimationState = null;\r\n\r\n\t\tconstructor(texture: PIXI.Texture) {\r\n\t\t\tsuper(texture);\r\n\t\t\tthis.pluginName = 'spriteHeaven';\r\n\t\t\tif (this.texture.valid) this._onTextureUpdate();\r\n\t\t}\r\n\r\n\t\tget _tintRGB() {\r\n\t\t\tthis.color.updateTransform();\r\n\t\t\treturn this.color.lightRgba & 0xffffff;\r\n\t\t}\r\n\r\n\t\tset _tintRGB(value: number) {\r\n\t\t\t//nothing\r\n\t\t}\r\n\r\n\t\tget tint() {\r\n\t\t\treturn this.color ? this.color.tintBGR : 0xffffff;\r\n\t\t}\r\n\r\n\t\tset tint(value: number) {\r\n\t\t\tthis.color && (this.color.tintBGR = value);\r\n\t\t}\r\n\r\n\t\tupdateTransform() {\r\n\t\t\tthis._boundsID++;\r\n\r\n\t\t\tthis.transform.updateTransform(this.parent.transform);\r\n\r\n\t\t\t// TODO: check render flags, how to process stuff here\r\n\t\t\tthis.worldAlpha = this.alpha * this.parent.worldAlpha;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.alpha = this.worldAlpha;\r\n\t\t\t\tthis.color.updateTransform();\r\n\t\t\t}\r\n\r\n\t\t\tfor (let i = 0, j = this.children.length; i < j; ++i) {\r\n\t\t\t\tconst child = this.children[i];\r\n\r\n\t\t\t\tif (child.visible) {\r\n\t\t\t\t\tchild.updateTransform();\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_onTextureUpdate() {\r\n\t\t\tthis._textureID = -1;\r\n\t\t\tthis._textureTrimmedID = -1;\r\n\t\t\tthis.cachedTint = 0xFFFFFF;\r\n\t\t\tif (this.color) {\r\n\t\t\t\tthis.color.pma = this._texture.baseTexture.premultipliedAlpha;\r\n\t\t\t}\r\n\r\n\t\t\t// so if _width is 0 then width was not set..\r\n\t\t\tif (this._width) {\r\n\t\t\t\tthis.scale.x = sign(this.scale.x) * this._width / this._texture.orig.width;\r\n\t\t\t}\r\n\r\n\t\t\tif (this._height) {\r\n\t\t\t\tthis.scale.y = sign(this.scale.y) * this._height / this._texture.orig.height;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t_calculateBounds()\r\n\t\t{\r\n\t\t\tconst polygon = (this._texture as any).polygon;\r\n\t\t\tconst trim = this._texture.trim;\r\n\t\t\tconst orig = this._texture.orig;\r\n\r\n\t\t\t// First lets check to see if the current texture has a trim..\r\n\t\t\tif (!polygon && (!trim || (trim.width === orig.width && trim.height === orig.height)))\r\n\t\t\t{\r\n\t\t\t\t// no trim! lets use the usual calculations..\r\n\t\t\t\tthis.calculateVertices();\r\n\t\t\t\tthis._bounds.addQuad(this.vertexData as any);\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\t// lets calculate a special trimmed bounds...\r\n\t\t\t\tthis.calculateTrimmedVertices();\r\n\t\t\t\tthis._bounds.addQuad(this.vertexTrimmedData as any);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateVertices() {\r\n\t\t\tconst transform = this.transform as any;\r\n\t\t\tconst texture = this._texture as any;\r\n\r\n\t\t\tif (this._transformID === transform._worldID && this._textureID === texture._updateID) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tthis._transformID = transform._worldID;\r\n\t\t\tthis._textureID = texture._updateID;\r\n\r\n\t\t\t// set the vertex data\r\n\r\n\t\t\tconst wt = this.transform.worldTransform;\r\n\t\t\tconst a = wt.a;\r\n\t\t\tconst b = wt.b;\r\n\t\t\tconst c = wt.c;\r\n\t\t\tconst d = wt.d;\r\n\t\t\tconst tx = wt.tx;\r\n\t\t\tconst ty = wt.ty;\r\n\t\t\tconst anchor = this._anchor as any;\r\n\t\t\tconst orig = texture.orig;\r\n\r\n\t\t\tif (texture.polygon) {\r\n\t\t\t\tthis.uvs = texture.polygon.uvs;\r\n\t\t\t\tthis.indices = texture.polygon.indices;\r\n\r\n\t\t\t\tconst vertices = texture.polygon.vertices;\r\n\t\t\t\tconst n = vertices.length;\r\n\r\n\t\t\t\tif (this.vertexData.length !== n) {\r\n\t\t\t\t\tthis.vertexData = new Float32Array(n);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst vertexData = this.vertexData;\r\n\r\n\t\t\t\tconst dx = -(anchor._x * orig.width);\r\n\t\t\t\tconst dy = -(anchor._y * orig.height);\r\n\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tconst x = vertices[i] + dx;\r\n\t\t\t\t\tconst y = vertices[i + 1] + dy;\r\n\r\n\t\t\t\t\tvertexData[i] = x * a + y * c + tx;\r\n\t\t\t\t\tvertexData[i + 1] = x * b + y * d + ty;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst vertexData = this.vertexData;\r\n\t\t\t\tconst trim = texture.trim;\r\n\r\n\t\t\t\tlet w0 = 0;\r\n\t\t\t\tlet w1 = 0;\r\n\t\t\t\tlet h0 = 0;\r\n\t\t\t\tlet h1 = 0;\r\n\r\n\t\t\t\tif (trim) {\r\n\t\t\t\t\t// if the sprite is trimmed and is not a tilingsprite then we need to add the extra\r\n\t\t\t\t\t// space before transforming the sprite coords.\r\n\t\t\t\t\tw1 = trim.x - (anchor._x * orig.width);\r\n\t\t\t\t\tw0 = w1 + trim.width;\r\n\r\n\t\t\t\t\th1 = trim.y - (anchor._y * orig.height);\r\n\t\t\t\t\th0 = h1 + trim.height;\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\tw1 = -anchor._x * orig.width;\r\n\t\t\t\t\tw0 = w1 + orig.width;\r\n\r\n\t\t\t\t\th1 = -anchor._y * orig.height;\r\n\t\t\t\t\th0 = h1 + orig.height;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[0] = (a * w1) + (c * h1) + tx;\r\n\t\t\t\tvertexData[1] = (d * h1) + (b * w1) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[2] = (a * w0) + (c * h1) + tx;\r\n\t\t\t\tvertexData[3] = (d * h1) + (b * w0) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[4] = (a * w0) + (c * h0) + tx;\r\n\t\t\t\tvertexData[5] = (d * h0) + (b * w0) + ty;\r\n\r\n\t\t\t\t// xy\r\n\t\t\t\tvertexData[6] = (a * w1) + (c * h0) + tx;\r\n\t\t\t\tvertexData[7] = (d * h0) + (b * w1) + ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tcalculateMaskVertices() {\r\n\t\t\t//WE HAVE A MASK\r\n\t\t\tconst maskSprite = this.maskSprite;\r\n\t\t\tconst tex = maskSprite.texture;\r\n\t\t\tconst orig = tex.orig;\r\n\t\t\tconst anchor = maskSprite.anchor;\r\n\r\n\t\t\tif (!tex.valid) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t\tif (!tex.transform) {\r\n\t\t\t\t// margin = 0.0, let it bleed a bit, shader code becomes easier\r\n\t\t\t\t// assuming that atlas textures were made with 1-pixel padding\r\n\t\t\t\ttex.transform = new (PIXI as any).TextureMatrix(tex, 0.0);\r\n\t\t\t}\r\n\t\t\ttex.transform.update();\r\n\r\n\t\t\t//same operations as in SpriteMaskFilter\r\n\t\t\tmaskSprite.transform.worldTransform.copy(tempMat);\r\n\t\t\ttempMat.invert();\r\n\t\t\ttempMat.scale(1.0 / orig.width, 1.0 / orig.height);\r\n\t\t\ttempMat.translate(anchor.x, anchor.y);\r\n\t\t\ttempMat.prepend(tex.transform.mapCoord);\r\n\r\n\t\t\tconst vertexData = this.vertexData;\r\n\t\t\tconst n = vertexData.length;\r\n\r\n\t\t\tif (!this.maskVertexData || this.maskVertexData.length !== n) {\r\n\t\t\t\tthis.maskVertexData = new Float32Array(n);\r\n\t\t\t}\r\n\r\n\t\t\tconst maskVertexData = this.maskVertexData;\r\n\r\n\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\tmaskVertexData[i] = vertexData[i] * tempMat.a + vertexData[i + 1] * tempMat.c + tempMat.tx;\r\n\t\t\t\tmaskVertexData[i + 1] = vertexData[i] * tempMat.b + vertexData[i + 1] * tempMat.d + tempMat.ty;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tdestroy(options?: PIXI.DestroyOptions | boolean) {\r\n\t\t\tif (this.animState) {\r\n\t\t\t\tthis.animState.stop();\r\n\t\t\t\tthis.animState = null;\r\n\t\t\t}\r\n\t\t\tsuper.destroy(options);\r\n\t\t}\r\n\t}\r\n\r\n\tmesh.Mesh.prototype.calculateMaskVertices = Sprite.prototype.calculateMaskVertices;\r\n}\r\n","namespace pixi_heaven {\r\n\timport MultiTextureSpriteRenderer = pixi_heaven.webgl.MultiTextureSpriteRenderer;\r\n\r\n\tclass SpriteHeavenRenderer extends MultiTextureSpriteRenderer {\r\n\t\tshaderVert =\r\n\t\t\t`precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute float aHue;\r\nattribute float aTextureId;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying float vHue;\r\nvarying float vTextureId;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * vec3(aVertexPosition, 1.0);\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aTextureCoord;\r\n    vTextureId = aTextureId;\r\n    vHue = aHue;\r\n}\r\n`;\r\n\t\tshaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying float vHue;\r\nvarying float vTextureId;\r\nuniform sampler2D uSamplers[%count%];\r\n\r\nvec3 hueShift( vec3 color, float hueAdjust ){\r\n\r\n\tconst vec3  kRGBToYPrime = vec3 (0.299, 0.587, 0.114);\r\n\tconst vec3  kRGBToI      = vec3 (0.596, -0.275, -0.321);\r\n\tconst vec3  kRGBToQ      = vec3 (0.212, -0.523, 0.311);\r\n\r\n\tconst vec3  kYIQToR     = vec3 (1.0, 0.956, 0.621);\r\n\tconst vec3  kYIQToG     = vec3 (1.0, -0.272, -0.647);\r\n\tconst vec3  kYIQToB     = vec3 (1.0, -1.107, 1.704);\r\n\r\n\tfloat   YPrime  = dot (color, kRGBToYPrime);\r\n\tfloat   I       = dot (color, kRGBToI);\r\n\tfloat   Q       = dot (color, kRGBToQ);\r\n\tfloat   hue     = atan (Q, I);\r\n\tfloat   chroma  = sqrt (I * I + Q * Q);\r\n\r\n\thue += hueAdjust;\r\n\r\n\tQ = chroma * sin (hue);\r\n\tI = chroma * cos (hue);\r\n\r\n\tvec3    yIQ   = vec3 (YPrime, I, Q);\r\n\r\n\treturn vec3( dot (yIQ, kYIQToR), dot (yIQ, kYIQToG), dot (yIQ, kYIQToB) );\r\n\r\n}\r\n\r\nvoid main(void) {\r\nvec4 texColor;\r\nvec2 texCoord = vTextureCoord;\r\nfloat textureId = floor(vTextureId+0.5);\r\n%forloop%\r\ngl_FragColor = vec4(hueShift(texColor.rgb, vHue), texColor.a);\r\n}`;\r\n\r\n\t\tcreateVao(vertexBuffer: PIXI.glCore.GLBuffer) {\r\n\t\t\tconst attrs = this.shader.attributes;\r\n\t\t\tthis.vertSize = attrs.aTextureId ? 5 : 4;\r\n\t\t\tthis.vertByteSize = this.vertSize * 4;\r\n\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst vao = this.renderer.createVao()\r\n\t\t\t\t.addIndex(this.indexBuffer)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aHue, gl.FLOAT, false, this.vertByteSize, 3 * 4);\r\n\r\n\t\t\tif (attrs.aTextureId) {\r\n\t\t\t\tvao.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 4 * 4);\r\n\t\t\t}\r\n\r\n\t\t\treturn vao;\r\n\t\t}\r\n\r\n\t\tfillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, textureId: number) {\r\n\t\t\t//first, fill the coordinates!\r\n\r\n\t\t\tconst vertexData = sprite.vertexData;\r\n\r\n\t\t\tconst n = vertexData.length;\r\n\r\n\t\t\tconst hue = sprite.color.hue;\r\n\t\t\tconst stride = this.vertSize;\r\n\t\t\tconst oldIndex = index;\r\n\r\n\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\tfloat32View[index] = vertexData[i];\r\n\t\t\t\tfloat32View[index + 1] = vertexData[i + 1];\r\n\t\t\t\tfloat32View[index + 3] = hue;\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tconst uvs = sprite.uvs;\r\n\t\t\tif (uvs) {\r\n\t\t\t\tindex = oldIndex + 2;\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tuint32View[index] = (((uvs[i + 1] * 65535) & 0xFFFF) << 16) | ((uvs[i] * 65535) & 0xFFFF);\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst _uvs = sprite._texture._uvs.uvsUint32;\r\n\t\t\t\tindex = oldIndex + 2;\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tuint32View[index] = _uvs[i >> 1];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (stride === 5) {\r\n\t\t\t\tindex = oldIndex + 4;\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tfloat32View[index] = textureId;\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('spriteHeaven', SpriteHeavenRenderer);\r\n}","namespace pixi_heaven.webgl {\r\n\timport BaseTexture = PIXI.BaseTexture;\r\n\timport GLBuffer = PIXI.glCore.GLBuffer;\r\n\timport settings = PIXI.settings;\r\n\timport premultiplyBlendMode = PIXI.utils.premultiplyBlendMode;\r\n\r\n\tconst tempArray = new Float32Array([0, 0, 0, 0]);\r\n\r\n\tclass SpriteMaskedRenderer extends MultiTextureSpriteRenderer {\r\n\t\tshaderVert =\r\n\t\t\t`precision highp float;\r\nattribute vec2 aVertexPosition;\r\nattribute vec2 aTextureCoord;\r\nattribute vec4 aLight, aDark;\r\nattribute float aTextureId;\r\nattribute vec2 aMaskCoord;\r\nattribute vec4 aMaskClamp;\r\n\r\nuniform mat3 projectionMatrix;\r\n\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nvarying vec2 vMaskCoord;\r\nvarying vec4 vMaskClamp;\r\n\r\nvoid main(void){\r\n    gl_Position.xyw = projectionMatrix * vec3(aVertexPosition, 1.0);\r\n    gl_Position.z = 0.0;\r\n    \r\n    vTextureCoord = aTextureCoord;\r\n    vLight = aLight;\r\n    vDark = aDark;\r\n    vTextureId = aTextureId;\r\n    vMaskCoord = aMaskCoord;\r\n    vMaskClamp = aMaskClamp;\r\n}\r\n`;\r\n\t\tshaderFrag = `\r\nvarying vec2 vTextureCoord;\r\nvarying vec4 vLight, vDark;\r\nvarying float vTextureId;\r\nvarying vec2 vMaskCoord;\r\nvarying vec4 vMaskClamp;\r\nuniform sampler2D uSamplers[2];\r\nuniform sampler2D uMask;\r\n\r\nvoid main(void) {\r\nvec4 texColor = texture2D(uSamplers[0], vTextureCoord);\r\n\r\nfloat clip = step(3.5,\r\n    step(vMaskClamp.x, vMaskCoord.x) +\r\n    step(vMaskClamp.y, vMaskCoord.y) +\r\n    step(vMaskCoord.x, vMaskClamp.z) +\r\n    step(vMaskCoord.y, vMaskClamp.w));\r\n\r\nvec4 maskColor = texture2D(uSamplers[1], vMaskCoord);\r\n\r\nvec2 texCoord = vTextureCoord;\r\nvec4 fragColor;\r\nfragColor.a = texColor.a * vLight.a;\r\nfragColor.rgb = ((texColor.a - 1.0) * vDark.a + 1.0 - texColor.rgb) * vDark.rgb + texColor.rgb * vLight.rgb;\r\ngl_FragColor = fragColor * (vTextureId * (maskColor.r * clip) + 1.0 - vTextureId);\r\n}`;\r\n\r\n\t\tcreateVao(vertexBuffer: PIXI.glCore.GLBuffer) {\r\n\t\t\tconst attrs = this.shader.attributes;\r\n\t\t\tthis.vertSize = 12;\r\n\t\t\tthis.vertByteSize = this.vertSize * 4;\r\n\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst vao = this.renderer.createVao()\r\n\t\t\t\t.addIndex(this.indexBuffer)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aVertexPosition, gl.FLOAT, false, this.vertByteSize, 0)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTextureCoord, gl.UNSIGNED_SHORT, true, this.vertByteSize, 2 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aLight, gl.UNSIGNED_BYTE, true, this.vertByteSize, 3 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aDark, gl.UNSIGNED_BYTE, true, this.vertByteSize, 4 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aTextureId, gl.FLOAT, false, this.vertByteSize, 5 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aMaskCoord, gl.FLOAT, false, this.vertByteSize, 6 * 4)\r\n\t\t\t\t.addAttribute(vertexBuffer, attrs.aMaskClamp, gl.FLOAT, false, this.vertByteSize, 8 * 4);\r\n\r\n\t\t\treturn vao;\r\n\t\t}\r\n\r\n\t\tfillVertices(float32View: Float32Array, uint32View: Uint32Array, index: number, sprite: any, textureId: number) {\r\n\t\t\t//first, fill the coordinates!\r\n\r\n\t\t\tconst vertexData = sprite.vertexData;\r\n\t\t\tconst n = vertexData.length;\r\n\r\n\t\t\tconst lightRgba = sprite.color.lightRgba;\r\n\t\t\tconst darkRgba = sprite.color.darkRgba;\r\n\t\t\tconst stride = this.vertSize;\r\n\r\n\t\t\tconst mask = sprite.maskSprite;\r\n\t\t\tlet clamp: any = tempArray;\r\n\t\t\tlet maskVertexData = tempArray;\r\n\r\n\t\t\tif (mask) {\r\n\t\t\t\tsprite.calculateMaskVertices();\r\n\t\t\t\tclamp = mask._texture.transform.uClampFrame;\r\n\t\t\t\tmaskVertexData = sprite.maskVertexData;\r\n\t\t\t}\r\n\r\n\t\t\tconst oldIndex = index;\r\n\r\n\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\tfloat32View[index] = vertexData[i];\r\n\t\t\t\tfloat32View[index + 1] = vertexData[i + 1];\r\n\t\t\t\tuint32View[index + 3] = lightRgba;\r\n\t\t\t\tuint32View[index + 4] = darkRgba;\r\n\t\t\t\tfloat32View[index + 5] = mask ? 1 : 0;\r\n\r\n\t\t\t\tfloat32View[index + 6] = maskVertexData[i];\r\n\t\t\t\tfloat32View[index + 7] = maskVertexData[i + 1];\r\n\t\t\t\tfloat32View[index + 8] = clamp[0];\r\n\t\t\t\tfloat32View[index + 9] = clamp[1];\r\n\t\t\t\tfloat32View[index + 10] = clamp[2];\r\n\t\t\t\tfloat32View[index + 11] = clamp[3];\r\n\r\n\t\t\t\tindex += stride;\r\n\t\t\t}\r\n\r\n\t\t\tconst uvs = sprite.uvs;\r\n\t\t\tif (uvs) {\r\n\t\t\t\tindex = oldIndex + 2;\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tuint32View[index] = ((Math.round(uvs[i + 1] * 65535) & 0xFFFF) << 16) | (Math.round(uvs[i] * 65535) & 0xFFFF);\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tconst _uvs = sprite._texture._uvs.uvsUint32;\r\n\t\t\t\tindex = oldIndex + 2;\r\n\t\t\t\tfor (let i = 0; i < n; i += 2) {\r\n\t\t\t\t\tuint32View[index] = _uvs[i >> 1];\r\n\t\t\t\t\tindex += stride;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/**\r\n\t\t * We need different flush for mask strategy\r\n\t\t * Renders the content and empties the current batch.\r\n\t\t *\r\n\t\t */\r\n\t\tflush() {\r\n\t\t\tif (this.currentIndex === 0) {\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst gl = this.renderer.gl;\r\n\t\t\tconst MAX_TEXTURES = this.MAX_TEXTURES;\r\n\r\n\t\t\tlet np2 = utils.nextPow2((this.countVertex + 3) / 4 | 0);\r\n\t\t\tlet log2 = utils.log2(np2);\r\n\t\t\tconst buffer = this.buffers[log2];\r\n\r\n\t\t\tnp2 = utils.nextPow2((this.countIndex + 5) / 6 | 0);\r\n\t\t\tlog2 = utils.log2(np2);\r\n\t\t\tconst bufferIndex = this.buffersIndex[log2];\r\n\r\n\t\t\tconst sprites = this.sprites;\r\n\t\t\tconst groups = this.groups;\r\n\r\n\t\t\tconst float32View = buffer.float32View;\r\n\t\t\tconst uint32View = buffer.uint32View;\r\n\r\n\t\t\t// const touch = 0;// this.renderer.textureGC.count;\r\n\r\n\t\t\tlet nextTexture, nextMaskTexture: any;\r\n\t\t\tlet currentTexture: BaseTexture, currentMaskTexture: BaseTexture = null;\r\n\t\t\tlet groupCount = 1;\r\n\t\t\tlet textureCount = 0;\r\n\t\t\tlet currentGroup = groups[0];\r\n\t\t\tlet blendMode = premultiplyBlendMode[\r\n\t\t\t\t(sprites[0] as any)._texture.baseTexture.premultipliedAlpha ? 1 : 0][sprites[0].blendMode];\r\n\t\t\tlet currentUniforms: any = this.getUniforms(sprites[0]);\r\n\t\t\tlet hasMesh = false;\r\n\r\n\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\tcurrentGroup.start = 0;\r\n\t\t\tcurrentGroup.blend = blendMode;\r\n\t\t\tcurrentGroup.uniforms = currentUniforms;\r\n\r\n\t\t\tlet i;\r\n\t\t\tlet posVertex = 0;\r\n\t\t\tlet posIndex = 0;\r\n\r\n\t\t\tfor (i = 0; i < this.currentIndex; ++i) {\r\n\t\t\t\tconst sprite = sprites[i];\r\n\r\n\t\t\t\tsprites[i] = null;\r\n\r\n\t\t\t\tnextTexture = (sprite as any).texture.baseTexture;\r\n\t\t\t\tnextMaskTexture = null;\r\n\r\n\t\t\t\tif (sprite.maskSprite) {\r\n\t\t\t\t\tsprite.calculateMaskVertices();\r\n\t\t\t\t\tnextMaskTexture = sprite.maskSprite.texture.baseTexture;\r\n\r\n\t\t\t\t\tif (currentMaskTexture === null) {\r\n\t\t\t\t\t\tcurrentMaskTexture = nextMaskTexture;\r\n\t\t\t\t\t\tcurrentGroup.textures[1] = nextMaskTexture;\r\n\t\t\t\t\t} else if (currentMaskTexture !== nextMaskTexture) {\r\n\t\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\t\tcurrentMaskTexture = null;\r\n\t\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst spriteBlendMode = premultiplyBlendMode[Number(nextTexture.premultipliedAlpha)][sprite.blendMode];\r\n\r\n\t\t\t\tif (blendMode !== spriteBlendMode) {\r\n\t\t\t\t\t// finish a group..\r\n\t\t\t\t\tblendMode = spriteBlendMode;\r\n\r\n\t\t\t\t\t// force the batch to break!\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\tcurrentMaskTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst uniforms = i == 0 ? currentUniforms : this.getUniforms(sprite);\r\n\t\t\t\tif (currentUniforms !== uniforms) {\r\n\t\t\t\t\tcurrentTexture = null;\r\n\t\t\t\t\tcurrentMaskTexture = null;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (currentTexture !== nextTexture) {\r\n\t\t\t\t\tcurrentTexture = nextTexture;\r\n\t\t\t\t\tcurrentMaskTexture = nextMaskTexture;\r\n\r\n\t\t\t\t\tif (textureCount === MAX_TEXTURES) {\r\n\r\n\t\t\t\t\t\ttextureCount = 0;\r\n\r\n\t\t\t\t\t\tcurrentGroup.size = posIndex - currentGroup.start;\r\n\r\n\t\t\t\t\t\tcurrentGroup = groups[groupCount++];\r\n\t\t\t\t\t\tcurrentGroup.textureCount = 0;\r\n\t\t\t\t\t\tcurrentGroup.blend = blendMode;\r\n\t\t\t\t\t\tcurrentGroup.start = posIndex;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//nextTexture._enabled = TICK;\r\n\t\t\t\t\tnextTexture._virtalBoundId = textureCount;\r\n\r\n\t\t\t\t\tcurrentGroup.textureCount = MAX_TEXTURES;\r\n\t\t\t\t\tcurrentGroup.textures[0] = nextTexture;\r\n\t\t\t\t\tcurrentGroup.textures[1] = nextMaskTexture || PIXI.Texture.WHITE.baseTexture;\r\n\t\t\t\t\tcurrentGroup.uniforms = uniforms;\r\n\t\t\t\t\ttextureCount = MAX_TEXTURES;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.fillVertices(float32View, uint32View, posVertex * this.vertSize, sprite, nextTexture._virtalBoundId);\r\n\r\n\t\t\t\tif (sprite.indices) {\r\n\t\t\t\t\tconst len = sprite.indices.length;\r\n\t\t\t\t\tfor (let k=0; k<len; k++) {\r\n\t\t\t\t\t\tbufferIndex[posIndex++] = posVertex + sprite.indices[k];\r\n\t\t\t\t\t}\r\n\t\t\t\t\thasMesh = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 1;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 2;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 2;\r\n\t\t\t\t\tbufferIndex[posIndex++] = posVertex + 3;\r\n\t\t\t\t}\r\n\t\t\t\tposVertex += sprite.vertexData.length / 2;\r\n\t\t\t}\r\n\r\n\t\t\tcurrentGroup.size = posIndex - currentGroup.start;\r\n\r\n\t\t\tconst curVertexCount = this.vertexCount;\r\n\t\t\tconst isNewBuffer = this.checkVaoMax();\r\n\r\n\t\t\tthis.vertexBuffers[curVertexCount].upload(buffer.vertices, 0, !isNewBuffer);\r\n\t\t\tif (hasMesh) {\r\n\t\t\t\tthis.indexBuffers[curVertexCount].upload(bufferIndex, 0);\r\n\t\t\t} else {\r\n\t\t\t\tthis.indexBuffer.bind();\r\n\t\t\t}\r\n\r\n\t\t\tcurrentUniforms = null;\r\n\t\t\t// / render the groups..\r\n\t\t\tfor (i = 0; i < groupCount; i++) {\r\n\t\t\t\tconst group = groups[i];\r\n\t\t\t\tconst groupTextureCount = 2;// group.textureCount;\r\n\r\n\t\t\t\tif (group.uniforms !== currentUniforms) {\r\n\t\t\t\t\tthis.syncUniforms(group.uniforms);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor (let j = 0; j < groupTextureCount; j++) {\r\n\t\t\t\t\tthis.renderer.bindTexture(group.textures[j], j, true);\r\n\t\t\t\t\tgroup.textures[j]._virtalBoundId = -1;\r\n\r\n\t\t\t\t\tconst v = this.shader.uniforms.samplerSize;\r\n\t\t\t\t\tif (v) {\r\n\t\t\t\t\t\tv[0] = group.textures[j].realWidth;\r\n\t\t\t\t\t\tv[1] = group.textures[j].realHeight;\r\n\t\t\t\t\t\tthis.shader.uniforms.samplerSize = v;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// set the blend mode..\r\n\t\t\t\tthis.renderer.state.setBlendMode(group.blend);\r\n\r\n\t\t\t\tgl.drawElements(gl.TRIANGLES, group.size, gl.UNSIGNED_SHORT, group.start *   2);\r\n\t\t\t}\r\n\r\n\t\t\t// reset sprites for the next flush\r\n\t\t\tthis.currentIndex = 0;\r\n\t\t\tthis.countVertex = 0;\r\n\t\t\tthis.countIndex = 0;\r\n\t\t}\r\n\r\n\t\tgenShader() {\r\n\t\t\tconst gl = this.renderer.gl;\r\n\r\n\t\t\tthis.MAX_TEXTURES = 2;\r\n\r\n\t\t\tthis.shader = generateMultiTextureShader(this.shaderVert, this.shaderFrag, gl, this.MAX_TEXTURES);\r\n\t\t}\r\n\t}\r\n\r\n\tPIXI.WebGLRenderer.registerPlugin('spriteMasked', SpriteMaskedRenderer);\r\n}","namespace pixi_heaven {\r\n\texport class SpriteModel {\r\n\r\n\t}\r\n}","namespace pixi_heaven {\r\n\t// export class Text2d extends PIXI.Text {\r\n     //    constructor(text?: string, style?: PIXI.TextStyle, canvas?: HTMLCanvasElement) {\r\n     //        super(text, style, canvas);\r\n     //        this.proj = new Projection2d(this.transform);\r\n     //        this.pluginName = 'sprite2d';\r\n     //        this.vertexData = new Float32Array(12);\r\n     //    }\r\n\t//\r\n     //    proj: Projection2d;\r\n\t//\r\n     //    get worldTransform() {\r\n\t//         return this.proj.affine ? this.transform.worldTransform : this.proj.world as any;\r\n     //    }\r\n\t// }\r\n\t//\r\n\t// Text2d.prototype.calculateVertices = Sprite2d.prototype.calculateVertices;\r\n\t// (Text2d.prototype as any).calculateTrimmedVertices = Sprite2d.prototype.calculateTrimmedVertices;\r\n\t// (Text2d.prototype as any)._calculateBounds = Sprite2d.prototype._calculateBounds;\r\n}\r\n","///<reference types=\"pixi-spine\"/>\r\nnamespace pixi_heaven.spine {\r\n\r\n\texport class Spine extends PIXI.spine.Spine {\r\n\t\thasSpriteMask: boolean = false;\r\n\t\tcolor = new ColorTransform();\r\n\r\n\t\tconstructor(spineData: PIXI.spine.core.SkeletonData) {\r\n\t\t\tsuper(spineData);\r\n\t\t}\r\n\r\n\t\tnewSprite(tex: PIXI.Texture): any {\r\n\t\t\treturn new SpineSprite(tex, this);\r\n\t\t}\r\n\r\n\t\tnewMesh(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array, drawMode?: number) {\r\n\t\t\treturn new SpineMesh(texture, vertices, uvs, indices, drawMode, this) as any;\r\n\t\t}\r\n\t}\r\n\r\n\texport class SpineMesh extends mesh.Mesh {\r\n\t\tregion: PIXI.spine.core.TextureRegion = null;\r\n\t\tspine: Spine;\r\n\r\n\t\tconstructor(texture: PIXI.Texture, vertices?: Float32Array, uvs?: Float32Array, indices?: Uint16Array, drawMode?: number,\r\n\t\t            spine: Spine = null) {\r\n\t\t\tsuper(texture, vertices, uvs, indices, drawMode);\r\n\t\t\tthis.spine = spine;\r\n\t\t\tthis.pluginName = settings.SPINE_MESH_PLUGIN;\r\n\t\t}\r\n\r\n\t\t_renderWebGL(renderer: PIXI.WebGLRenderer) {\r\n\t\t\tif (this.maskSprite) {\r\n\t\t\t\tthis.spine.hasSpriteMask = true;\r\n\t\t\t}\r\n\t\t\tif (this.spine.hasSpriteMask) {\r\n\t\t\t\tthis.pluginName = 'spriteMasked';\r\n\t\t\t}\r\n\t\t\tsuper._renderWebGL(renderer);\r\n\t\t}\r\n\t}\r\n\r\n\texport class SpineSprite extends Sprite {\r\n\t\tregion: PIXI.spine.core.TextureRegion = null;\r\n\t\tspine: Spine;\r\n\r\n\t\tconstructor(tex: PIXI.Texture, spine: Spine) {\r\n\t\t\tsuper(tex);\r\n\t\t\tthis.spine = spine;\r\n\t\t}\r\n\r\n\t\t_renderWebGL(renderer: PIXI.WebGLRenderer) {\r\n\t\t\tif (this.maskSprite) {\r\n\t\t\t\tthis.spine.hasSpriteMask = true;\r\n\t\t\t}\r\n\t\t\tif (this.spine.hasSpriteMask) {\r\n\t\t\t\tthis.pluginName = 'spriteMasked';\r\n\t\t\t}\r\n\t\t\tsuper._renderWebGL(renderer);\r\n\t\t}\r\n\t}\r\n}\r\n"]}